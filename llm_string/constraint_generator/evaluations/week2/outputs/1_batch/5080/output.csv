name,mask,nl_constraint,step_0,step_1,step_2,step_3,step_4
Name,True,"The name shall only contain letters a-z, letters A-Z and space characters.","(str.in.re s (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" "")))","(str.in.re s (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" "")))","(str.in.re s (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" "")))","(str.in.re s (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" "")))","(str.in.re s (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" "")))"
Name,True,The name shall contain at least one space character.,"(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")"
Name,True,The name shall not end with a space character.,"(not (= (str.at s (- (str.len s) 1)) "" ""))","(not (= (str.at s (- (str.len s) 1)) "" ""))","(not (= (str.at s (- (str.len s) 1)) "" ""))","(not (= (str.at s (- (str.len s) 1)) "" ""))","(not (= (str.at s (- (str.len s) 1)) "" ""))"
Name,True,The name shall not start with a space character.,"(not (= (str.at s 0) "" ""))","(not (= (str.at s 0) "" ""))","(not (= (str.at s 0) "" ""))","(not (= (str.at s 0) "" ""))","(not (= (str.at s 0) "" ""))"
Name,False,"The name shall not contain letters a-z, letters A-Z and spaces.","(not (str.in.re s (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(not (str.in.re s (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(not (str.in.re s (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(not (str.in.re s (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(not (str.in.re s (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))"
Name,False,The name shall contain no space character.,"(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))"
Name,False,The name shall end with a space character.,"(= (str.at s (- (str.len s) 1)) "" "")","(= (str.at s (- (str.len s) 1)) "" "")","(= (str.at s (- (str.len s) 1)) "" "")","(= (str.at s (- (str.len s) 1)) "" "")","(= (str.at s (- (str.len s) 1)) "" "")"
Name,False,The name shall start  with a space character.,"(= (str.at s 0) "" "")","(= (str.at s 0) "" "")","(= (str.at s 0) "" "")","(= (str.at s 0) "" "")","(= (str.at s 0) "" "")"
Email,True,The email shall not contain a space character.,"(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))"
Email,True,The email shall not start with a @ character.,"(not (= (str.at s 0) ""@""))","(not (= (str.at s 0) ""@""))","(not (= (str.at s 0) ""@""))","(not (= (str.at s 0) ""@""))","(not (= (str.at s 0) ""@""))"
Email,True,The email shall have exactly one @ character.,"(= (str.count s ""@"") 1)","(= (str.count s ""@"")(1))","(= (str.count s ""@"")(1))","(= (str.count s ""@"") 1)","(= 1 (str.count s ""@""))"
Email,True,"If the email contains a @ character, then the email shall include a dot character (.) after the @ character but before the end.","(=> (str.contains s ""@"")(exists ((i Int)) (and (> i (str.indexof s ""@"")) (< i (str.len s)) (str.contains (str.substr s i (- (str.len s) i)) "".""))))))","(=> (str.contains s ""@"")(str.contains (str.substr s (str.indexof s ""@"" 0) (str.len s)) "".""))","(=> (str.contains s ""@"")(str.contains (str.substr s (str.indexof s ""@"" 0) (str.len s)) "".""))","(=> (str.contains s ""@"")(str.contains (str.substr s (str.indexof s ""@"" 0) (str.len s)) "".""))","(=> (str.contains s ""@"")(str.contains (str.substr s (str.indexof s ""@"" 0) (str.len s)) "".""))"
Email,False,The email shall contain a space character.,"(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")"
Email,False,The email shall start with a @ character.,,"(= (str.at s 0) ""@"")]
}","(= (str.at s 0) ""@"")]
}","(= (str.at s 0) ""@"")","(= (str.at s 0) ""@"")"
Email,False,The email shall have either no @ characters or more than one @ character.,"(or (not (str.contains s ""@"")) (> (str.count s ""@"") 1))","(or (not (str.contains s ""@"")) (str.in.re s (re.+ (str.to.re ""@""))))","(or (not (str.contains s ""@"")) (str.in.re s (re.+ (str.to.re ""@""))))","(or (not (str.contains s ""@"")) (str.in.re s (re.+ (str.to.re ""@""))))","(or (not (str.contains s ""@"")) (str.in.re s (re.+ (str.to.re ""@""))))"
Email,False,"If the email contains a @ character, then the email shall not include any dot characters (.) after the @ character and before the end.","(=> (str.contains s ""@"")(not (str.contains (str.substr s (str.indexof s ""@"" 0) (str.length s)) ""."")))","(=> (str.contains s ""@"")(not (str.contains (str.substr s (str.indexof s ""@"" 0) (str.length s)) ""."")))","(=> (str.contains s ""@"")
             (not (str.contains (str.substr s (str.indexof s ""@"") (str.len s)) ""."")))","(=> (str.contains s ""@"")
             (not (str.contains (str.substr s (str.indexof s ""@"") (str.len s)) ""."")))","(=> (str.contains s ""@"")
             (not (str.contains (str.substr s (str.indexof s ""@"") (str.len s)) ""."")))"
Password,True,The password shall be at least 4 characters long.,(>= (str.len s) 4),(>= (str.len s) 4),(>= (str.len s) 4),(>= (str.len s) 4),(>= (str.len s) 4)
Password,True,"The password shall contain one of the following characters: !, #, $.","(or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$""))","(or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$""))","(or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$""))","(or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$""))","(or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$""))"
Password,True,The password shall contain at least one upper case characters.,"(exists ((c String)) (and (str.contains s c) (str.in.re c (re.+ (re.range ""A"" ""Z"")))))","(exists ((c String)) (and (str.contains s c) (str.in.re c (re.+ (re.range ""A"" ""Z"")))))","(exists ((c String)) (and (str.contains s c) (str.in.re c (re.+ (re.range ""A"" ""Z"")))))","(exists ((c String)) (and (str.contains s c) (str.in.re c (re.+ (re.range ""A"" ""Z"")))))","(exists ((c String)) (and (str.contains s c) (str.in.re c (re.+ (re.range ""A"" ""Z"")))))"
Password,True,The password shall contain at least one lower case characters.,"(str.contains s (str.to.re ""[a-z]""))","(exists ((c String)) (and (str.contains s c) (str.in.re c (str.to.re ""[a-z]""))))","(exists ((c String)) (and (str.contains s c) (str.in.re c (str.to.re ""[a-z]""))))","(exists ((c String)) (and (str.contains s c) (str.in.re c (str.to.re ""[a-z]""))))","(exists ((c String)) (and (str.contains s c) (str.in.re c (str.to.re ""[a-z]""))))"
Password,False,The password shall contain less than 4 characters.,(< (str.len s) 4),(< (str.len s) 4),(< (str.len s) 4),(< (str.len s) 4),(< (str.len s) 4)
Password,False,"The password shall not contain any of the following characters: !, #, $.",,,,,
Password,False,The password shall not contain any upper case characters.,"(forall ((c String)) (=> (str.contains s c) (not (str.in.re c (re.range ""A"" ""Z"")))))","(forall ((c String)) (=> (str.contains s c) (not (str.in.re c (re.range ""A"" ""Z"")))))","(forall ((c String)) (=> (str.contains s c) (not (str.in.re c (re.range ""A"" ""Z"")))))","(forall ((c String)) (=> (str.contains s c) (not (str.in.re c (re.range ""A"" ""Z"")))))","(forall ((c String)) (=> (str.contains s c) (not (str.in.re c (re.range ""A"" ""Z"")))))"
Password,False,The password shall not contain any lower case characters.,"(forall ((i Int)) (=> (and (>= i 0) (< i (str.len s))) (not (str.in.re (str.at s i) (str.to.re ""[a-z]"")))))","(forall ((i Int)) (=> (and (>= i 0) (< i (str.len s))) (not (str.in.re (str.at s i) (str.to.re ""[a-z]"")))))","(forall ((i Int)) (=> (and (>= i 0) (< i (str.len s))) (not (str.in.re (str.at s i) (str.to.re ""[a-z]"")))))","(forall ((i Int)) (=> (and (>= i 0) (< i (str.len s))) (not (str.in.re (str.at s i) (str.to.re ""[a-z]"")))))","(forall ((i Int)) (=> (and (>= i 0) (< i (str.len s))) (not (str.in.re (str.at s i) (str.to.re ""[a-z]"")))))"
Date,True,The date shall contain two hyphens.,"(and (str.contains s ""-"") (str.contains (str.substr s (str.indexof s ""-"") (str.length s)) ""-"") (not (= (str.count s ""-"") 2)))","(= (str.count s ""-"") 2)","(= (str.len (str.replace s ""-"" """")) (- (str.len s) 2))","(= (str.count s ""-"") 2)","(= (str.count s ""-"") 2)"
Date,True,The date shall have a number between 0 and 2025 before the first hyphen.,"(and (>= (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (<= (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025))","(and (>= (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (<= (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025))","(and (>= (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (<= (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025))","(and (>= (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (<= (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025))","(and (>= (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (<= (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025))"
Date,True,The date shall have a number between 1 and 12 after the first hyphen but before the second hyphen.,(and (>= s 1) (<= s 12)),"(let ((month (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"") + 1))))) (and (>= month 1) (<= month 12)))","(and (>= (str.to.int (str.substr s (str.indexof s ""-"" 0) (str.indexof s ""-"" 1))) 1) (<= (str.to.int (str.substr s (str.indexof s ""-"" 0) (str.indexof s ""-"" 1))) 12))","(let ((month (str.to.int (str.substr s (+ (str.indexof s ""-"") 1) (- (str.indexof s ""-"" (str.indexof s ""-"") 1) (str.indexof s ""-"") 1))))) (and (>= month 1) (<= month 12)))",
Date,True,The date shall have a number between 1 and 31 after the second hyphen.,,,,,
Date,False,"The date shall contain either no hyphens, one hyphen or more than two hyphens.","(or (= (str.count s ""-"") 0) (= (str.count s ""-"") 1) (> (str.count s ""-"") 2))",,,"(or (= (str.count s ""-"") 0) (= (str.count s ""-"") 1) (> (str.count s ""-"") 2))","(or (= (str.count s ""-"") 0) (= (str.count s ""-"") 1) (> (str.count s ""-"") 2))"
Date,False,"If the date has at least one hyphen, the part before the first hyphen shall be either a number smaller than 0 or a number larger than 2025.","(=> (str.contains s ""-"") (or (< (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (> (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025)))","(=> (str.contains s ""-"") (or (< (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (> (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025)))","(=> (str.contains s ""-"") (or (< (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (> (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025)))","(=> (str.contains s ""-"") (or (< (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (> (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025)))","(=> (str.contains s ""-"") (or (< (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (> (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025)))"
Date,False,"If the date has at least two hyphens, the part after the first hyphen but before the second hyphen shall be a number smaller than 1 or a number larger than 12.","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"") 1))) 1) (> (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"") 1))) 12)))","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (+ (str.indexof s ""-"") 1) (- (str.indexof s ""-"" (str.indexof s ""-"" (+ (str.indexof s ""-"") 1)) 1) (+ (str.indexof s ""-"") 1))) 1)) 1) (> (str.to.int (str.substr s (+ (str.indexof s ""-"") 1) (- (str.indexof s ""-"" (str.indexof s ""-"" (+ (str.indexof s ""-"") 1)) 1) (+ (str.indexof s ""-"") 1))) 12)))","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"") + 1))) 1) (> (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"") + 1))) 12)))","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"" (str.indexof s ""-"" (str.indexof s ""-"" 0)))))) 1) (> (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"" (str.indexof s ""-"" (str.indexof s ""-"" 0)))))) 12)))","(let ((hyphenCount (str.count s ""-""))) (=> (>= hyphenCount 2) (let ((s (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"" (str.indexof s ""-""))) - (str.indexof s ""-"")))) (or (< (str.to.int s) 1) (> (str.to.int s) 12)))))"
Date,False,"If the date has at least two hyphens, the part after the second hyphen shall be a number smaller than 1 or larger than 31.","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (+ (str.indexof s ""-"" 2) 1) (str.length s))) 1) (> (str.to.int (str.substr s (+ (str.indexof s ""-"" 2) 1) (str.length s))) 31)))","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (+ (str.indexof s ""-"" 2) 1) (str.len s))) 1) (> (str.to.int (str.substr s (+ (str.indexof s ""-"" 2) 1) (str.len s))) 31)))",,"(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (str.indexof s ""-"" (str.indexof s ""-"" 0) + 1) (str.len s))) 1) (> (str.to.int (str.substr s (str.indexof s ""-"" (str.indexof s ""-"" 0) + 1) (str.len s))) 31)))","(=> (>= (str.count s ""-"") 2) (or (< s 1) (> s 31)))"
