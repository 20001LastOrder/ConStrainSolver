name,mask,nl_constraint,step_0,step_1,step_2,step_3,step_4
Name,True,"The name shall only contain letters a-z, letters A-Z and space characters.","(str.in.re s (re.* (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(str.in.re s (re.* (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(str.in.re s (re.* (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(str.in.re s (re.* (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(str.in.re s (re.* (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))"
Name,True,The name shall contain at least one space character.,"(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")"
Name,True,The name shall not end with a space character.,"(not (= (str.at s (- (str.len s) 1)) "" ""))","(not (= (str.at s (- (str.len s) 1)) "" ""))","(not (= (str.at s (- (str.len s) 1)) "" ""))","(not (= (str.at s (- (str.len s) 1)) "" ""))","(not (= (str.at s (- (str.len s) 1)) "" ""))"
Name,True,The name shall not start with a space character.,"(not (= (str.at s 0) "" ""))","(not (= (str.at s 0) "" ""))","(not (= (str.at s 0) "" ""))","(not (= (str.at s 0) "" ""))","(not (= (str.at s 0) "" ""))"
Name,False,"The name shall not contain letters a-z, letters A-Z and spaces.","(not (str.in.re s (str.to.re ""[a-zA-Z ]"")))","(not (str.in.re s (str.to.re ""[a-zA-Z ]"")))","(not (str.in.re s (str.to.re ""[a-zA-Z ]"")))","(not (str.in.re s (str.to.re ""[a-zA-Z ]"")))","(not (str.in.re s (str.to.re ""[a-zA-Z ]"")))"
Name,False,The name shall contain no space character.,"(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))"
Name,False,The name shall end with a space character.,"(= (str.at s (- (str.len s) 1)) "" "")","(= (str.at s (- (str.len s) 1)) "" "")","(= (str.at s (- (str.len s) 1)) "" "")","(= (str.at s (- (str.len s) 1)) "" "")","(= (str.at s (- (str.len s) 1)) "" "")"
Name,False,The name shall start  with a space character.,"(= (str.at s 0) "" "")","(= (str.at s 0) "" "")","(= (str.at s 0) "" "")","(= (str.at s 0) "" "")","(= (str.at s 0) "" "")"
Email,True,The email shall not contain a space character.,"(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))"
Email,True,The email shall not start with a @ character.,"(not (= (str.at s 0) ""@""))","(not (= (str.at s 0) ""@""))","(not (= (str.at s 0) ""@""))","(not (= (str.at s 0) ""@""))","(not (= (str.at s 0) ""@""))"
Email,True,The email shall have exactly one @ character.,"(and (str.contains s ""@"")(not (str.in.re s (re.++ (re.* re.allchar) (str.to.re ""@"")(re.* re.allchar) (str.to.re ""@"")(re.* re.allchar)))))","(and (str.contains s ""@"")(not (str.in.re s (re.++ (re.* re.allchar) (str.to.re ""@"")(re.* re.allchar) (str.to.re ""@"")(re.* re.allchar)))))","(and (str.contains s ""@"")(not (str.in.re s (re.++ (re.* re.allchar) (str.to.re ""@"")(re.* re.allchar) (str.to.re ""@"")(re.* re.allchar)))))","(and (str.contains s ""@"")(not (str.in.re s (re.++ (re.* re.allchar) (str.to.re ""@"")(re.* re.allchar) (str.to.re ""@"")(re.* re.allchar)))))","(and (str.contains s ""@"")(not (str.in.re s (re.++ (re.* re.allchar) (str.to.re ""@"")(re.* re.allchar) (str.to.re ""@"")(re.* re.allchar)))))"
Email,True,"If the email contains a @ character, then the email shall include a dot character (.) after the @ character but before the end.","(=> (str.contains s ""@"")(exists ((i Int)) (and (>= i (+ (str.indexof s ""@"") 1)) (< i (str.len s)) (str.contains (str.substr s i (str.len s)) "".""))))))","(=> (str.contains s ""@"")(str.contains (str.substr s (+ (str.indexof s ""@"") 1) (- (str.length s) (+ (str.indexof s ""@"") 1))) "".""))","(=> (str.contains s ""@"")(exists ((i Int)) (and (>= i 0) (< i (str.len s)) (and (= (str.at s i) ""@"")(exists ((j Int)) (and (> j i) (< j (str.len s)) (str.contains (str.substr s j (- (str.len s) j)) "".""))))))))","(=> (str.contains s ""@"")(exists ((pos Int)) (and (>= pos 0) (< pos (str.len s)) (str.contains (str.substr s (+ pos 1) (- (str.len s) (+ pos 1))) "".""))))","(=> (str.contains s ""@"")(exists ((pos Int)) (and (>= pos 0) (< pos (str.len s)) (str.contains (str.substr s (+ pos 1) (- (str.len s) (+ pos 1))) "".""))))"
Email,False,The email shall contain a space character.,"(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")"
Email,False,The email shall start with a @ character.,"(= (str.at s 0) ""@"")]
}","(= (str.at s 0) ""@"")]
}","(= (str.at s 0) ""@"")]
}","(= (str.at s 0) ""@"")","(= (str.at s 0) ""@"")"
Email,False,The email shall have either no @ characters or more than one @ character.,"(or (not (str.contains s ""@"")) (str.in.re s (re.+ (str.to.re ""@""))))","(or (not (str.contains s ""@"")) (str.in.re s (re.+ (str.to.re ""@""))))","(or (not (str.contains s ""@"")) (str.in.re s (re.+ (str.to.re ""@""))))","(or (not (str.contains s ""@"")) (str.in.re s (re.+ (str.to.re ""@""))))","(or (not (str.contains s ""@"")) (str.in.re s (re.+ (str.to.re ""@""))))"
Email,False,"If the email contains a @ character, then the email shall not include any dot characters (.) after the @ character and before the end.","(=> (str.contains s ""@"")(not (str.contains (str.substr s (str.indexof s ""@"" 0) (str.len s)) ""."")))","(=> (str.contains s ""@"")(not (str.contains (str.substr s (str.indexof s ""@"" 0) (str.len s)) ""."")))","(=> (str.contains s ""@"")(not (str.contains (str.substr s (str.indexof s ""@"" 0) (str.len s)) ""."")))","(=> (str.contains s ""@"")(not (str.contains (str.substr s (str.indexof s ""@"" 0) (str.len s)) ""."")))","(=> (str.contains s ""@"")(not (str.contains (str.substr s (str.indexof s ""@"" 0) (str.len s)) ""."")))"
Password,True,The password shall be at least 4 characters long.,(>= (str.len s) 4),(>= (str.len s) 4),(>= (str.len s) 4),(>= (str.len s) 4),(>= (str.len s) 4)
Password,True,"The password shall contain one of the following characters: !, #, $.","(or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$""))","(or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$""))","(or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$""))","(or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$""))","(or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$""))"
Password,True,The password shall contain at least one upper case characters.,"(or (str.contains s ""A"") (str.contains s ""B"") (str.contains s ""C"") (str.contains s ""D"") (str.contains s ""E"") (str.contains s ""F"") (str.contains s ""G"") (str.contains s ""H"") (str.contains s ""I"") (str.contains s ""J"") (str.contains s ""K"") (str.contains s ""L"") (str.contains s ""M"") (str.contains s ""N"") (str.contains s ""O"") (str.contains s ""P"") (str.contains s ""Q"") (str.contains s ""R"") (str.contains s ""S"") (str.contains s ""T"") (str.contains s ""U"") (str.contains s ""V"") (str.contains s ""W"") (str.contains s ""X"") (str.contains s ""Y"") (str.contains s ""Z""))","(or (str.contains s ""A"") (str.contains s ""B"") (str.contains s ""C"") (str.contains s ""D"") (str.contains s ""E"") (str.contains s ""F"") (str.contains s ""G"") (str.contains s ""H"") (str.contains s ""I"") (str.contains s ""J"") (str.contains s ""K"") (str.contains s ""L"") (str.contains s ""M"") (str.contains s ""N"") (str.contains s ""O"") (str.contains s ""P"") (str.contains s ""Q"") (str.contains s ""R"") (str.contains s ""S"") (str.contains s ""T"") (str.contains s ""U"") (str.contains s ""V"") (str.contains s ""W"") (str.contains s ""X"") (str.contains s ""Y"") (str.contains s ""Z""))","(or (str.contains s ""A"") (str.contains s ""B"") (str.contains s ""C"") (str.contains s ""D"") (str.contains s ""E"") (str.contains s ""F"") (str.contains s ""G"") (str.contains s ""H"") (str.contains s ""I"") (str.contains s ""J"") (str.contains s ""K"") (str.contains s ""L"") (str.contains s ""M"") (str.contains s ""N"") (str.contains s ""O"") (str.contains s ""P"") (str.contains s ""Q"") (str.contains s ""R"") (str.contains s ""S"") (str.contains s ""T"") (str.contains s ""U"") (str.contains s ""V"") (str.contains s ""W"") (str.contains s ""X"") (str.contains s ""Y"") (str.contains s ""Z""))","(or (str.contains s ""A"") (str.contains s ""B"") (str.contains s ""C"") (str.contains s ""D"") (str.contains s ""E"") (str.contains s ""F"") (str.contains s ""G"") (str.contains s ""H"") (str.contains s ""I"") (str.contains s ""J"") (str.contains s ""K"") (str.contains s ""L"") (str.contains s ""M"") (str.contains s ""N"") (str.contains s ""O"") (str.contains s ""P"") (str.contains s ""Q"") (str.contains s ""R"") (str.contains s ""S"") (str.contains s ""T"") (str.contains s ""U"") (str.contains s ""V"") (str.contains s ""W"") (str.contains s ""X"") (str.contains s ""Y"") (str.contains s ""Z""))","(or (str.contains s ""A"") (str.contains s ""B"") (str.contains s ""C"") (str.contains s ""D"") (str.contains s ""E"") (str.contains s ""F"") (str.contains s ""G"") (str.contains s ""H"") (str.contains s ""I"") (str.contains s ""J"") (str.contains s ""K"") (str.contains s ""L"") (str.contains s ""M"") (str.contains s ""N"") (str.contains s ""O"") (str.contains s ""P"") (str.contains s ""Q"") (str.contains s ""R"") (str.contains s ""S"") (str.contains s ""T"") (str.contains s ""U"") (str.contains s ""V"") (str.contains s ""W"") (str.contains s ""X"") (str.contains s ""Y"") (str.contains s ""Z""))"
Password,True,The password shall contain at least one lower case characters.,"(or (str.contains s ""a"") (str.contains s ""b"") (str.contains s ""c"") (str.contains s ""d"") (str.contains s ""e"") (str.contains s ""f"") (str.contains s ""g"") (str.contains s ""h"") (str.contains s ""i"") (str.contains s ""j"") (str.contains s ""k"") (str.contains s ""l"") (str.contains s ""m"") (str.contains s ""n"") (str.contains s ""o"") (str.contains s ""p"") (str.contains s ""q"") (str.contains s ""r"") (str.contains s ""s"") (str.contains s ""t"") (str.contains s ""u"") (str.contains s ""v"") (str.contains s ""w"") (str.contains s ""x"") (str.contains s ""y"") (str.contains s ""z""))","(or (str.contains s ""a"") (str.contains s ""b"") (str.contains s ""c"") (str.contains s ""d"") (str.contains s ""e"") (str.contains s ""f"") (str.contains s ""g"") (str.contains s ""h"") (str.contains s ""i"") (str.contains s ""j"") (str.contains s ""k"") (str.contains s ""l"") (str.contains s ""m"") (str.contains s ""n"") (str.contains s ""o"") (str.contains s ""p"") (str.contains s ""q"") (str.contains s ""r"") (str.contains s ""s"") (str.contains s ""t"") (str.contains s ""u"") (str.contains s ""v"") (str.contains s ""w"") (str.contains s ""x"") (str.contains s ""y"") (str.contains s ""z""))","(or (str.contains s ""a"") (str.contains s ""b"") (str.contains s ""c"") (str.contains s ""d"") (str.contains s ""e"") (str.contains s ""f"") (str.contains s ""g"") (str.contains s ""h"") (str.contains s ""i"") (str.contains s ""j"") (str.contains s ""k"") (str.contains s ""l"") (str.contains s ""m"") (str.contains s ""n"") (str.contains s ""o"") (str.contains s ""p"") (str.contains s ""q"") (str.contains s ""r"") (str.contains s ""s"") (str.contains s ""t"") (str.contains s ""u"") (str.contains s ""v"") (str.contains s ""w"") (str.contains s ""x"") (str.contains s ""y"") (str.contains s ""z""))","(or (str.contains s ""a"") (str.contains s ""b"") (str.contains s ""c"") (str.contains s ""d"") (str.contains s ""e"") (str.contains s ""f"") (str.contains s ""g"") (str.contains s ""h"") (str.contains s ""i"") (str.contains s ""j"") (str.contains s ""k"") (str.contains s ""l"") (str.contains s ""m"") (str.contains s ""n"") (str.contains s ""o"") (str.contains s ""p"") (str.contains s ""q"") (str.contains s ""r"") (str.contains s ""s"") (str.contains s ""t"") (str.contains s ""u"") (str.contains s ""v"") (str.contains s ""w"") (str.contains s ""x"") (str.contains s ""y"") (str.contains s ""z""))","(or (str.contains s ""a"") (str.contains s ""b"") (str.contains s ""c"") (str.contains s ""d"") (str.contains s ""e"") (str.contains s ""f"") (str.contains s ""g"") (str.contains s ""h"") (str.contains s ""i"") (str.contains s ""j"") (str.contains s ""k"") (str.contains s ""l"") (str.contains s ""m"") (str.contains s ""n"") (str.contains s ""o"") (str.contains s ""p"") (str.contains s ""q"") (str.contains s ""r"") (str.contains s ""s"") (str.contains s ""t"") (str.contains s ""u"") (str.contains s ""v"") (str.contains s ""w"") (str.contains s ""x"") (str.contains s ""y"") (str.contains s ""z""))"
Password,False,The password shall contain less than 4 characters.,(< (str.len s) 4),(< (str.len s) 4),(< (str.len s) 4),(< (str.len s) 4),(< (str.len s) 4)
Password,False,"The password shall not contain any of the following characters: !, #, $.",,,,,
Password,False,The password shall not contain any upper case characters.,"(forall ((c String)) (=> (str.contains s c) (or (not (= c ""A"")) (not (= c ""B"")) (not (= c ""C"")) (not (= c ""D"")) (not (= c ""E"")) (not (= c ""F"")) (not (= c ""G"")) (not (= c ""H"")) (not (= c ""I"")) (not (= c ""J"")) (not (= c ""K"")) (not (= c ""L"")) (not (= c ""M"")) (not (= c ""N"")) (not (= c ""O"")) (not (= c ""P"")) (not (= c ""Q"")) (not (= c ""R"")) (not (= c ""S"")) (not (= c ""T"")) (not (= c ""U"")) (not (= c ""V"")) (not (= c ""W"")) (not (= c ""X"")) (not (= c ""Y"")) (not (= c ""Z"")))))","(forall ((c String)) (=> (str.contains s c) (or (not (= c ""A"")) (not (= c ""B"")) (not (= c ""C"")) (not (= c ""D"")) (not (= c ""E"")) (not (= c ""F"")) (not (= c ""G"")) (not (= c ""H"")) (not (= c ""I"")) (not (= c ""J"")) (not (= c ""K"")) (not (= c ""L"")) (not (= c ""M"")) (not (= c ""N"")) (not (= c ""O"")) (not (= c ""P"")) (not (= c ""Q"")) (not (= c ""R"")) (not (= c ""S"")) (not (= c ""T"")) (not (= c ""U"")) (not (= c ""V"")) (not (= c ""W"")) (not (= c ""X"")) (not (= c ""Y"")) (not (= c ""Z"")))))","(forall ((c String)) (=> (str.contains s c) (or (not (= c ""A"")) (not (= c ""B"")) (not (= c ""C"")) (not (= c ""D"")) (not (= c ""E"")) (not (= c ""F"")) (not (= c ""G"")) (not (= c ""H"")) (not (= c ""I"")) (not (= c ""J"")) (not (= c ""K"")) (not (= c ""L"")) (not (= c ""M"")) (not (= c ""N"")) (not (= c ""O"")) (not (= c ""P"")) (not (= c ""Q"")) (not (= c ""R"")) (not (= c ""S"")) (not (= c ""T"")) (not (= c ""U"")) (not (= c ""V"")) (not (= c ""W"")) (not (= c ""X"")) (not (= c ""Y"")) (not (= c ""Z"")))))","(forall ((c String)) (=> (str.contains s c) (or (not (= c ""A"")) (not (= c ""B"")) (not (= c ""C"")) (not (= c ""D"")) (not (= c ""E"")) (not (= c ""F"")) (not (= c ""G"")) (not (= c ""H"")) (not (= c ""I"")) (not (= c ""J"")) (not (= c ""K"")) (not (= c ""L"")) (not (= c ""M"")) (not (= c ""N"")) (not (= c ""O"")) (not (= c ""P"")) (not (= c ""Q"")) (not (= c ""R"")) (not (= c ""S"")) (not (= c ""T"")) (not (= c ""U"")) (not (= c ""V"")) (not (= c ""W"")) (not (= c ""X"")) (not (= c ""Y"")) (not (= c ""Z"")))))","(forall ((c String)) (=> (str.contains s c) (or (not (= c ""A"")) (not (= c ""B"")) (not (= c ""C"")) (not (= c ""D"")) (not (= c ""E"")) (not (= c ""F"")) (not (= c ""G"")) (not (= c ""H"")) (not (= c ""I"")) (not (= c ""J"")) (not (= c ""K"")) (not (= c ""L"")) (not (= c ""M"")) (not (= c ""N"")) (not (= c ""O"")) (not (= c ""P"")) (not (= c ""Q"")) (not (= c ""R"")) (not (= c ""S"")) (not (= c ""T"")) (not (= c ""U"")) (not (= c ""V"")) (not (= c ""W"")) (not (= c ""X"")) (not (= c ""Y"")) (not (= c ""Z"")))))"
Password,False,The password shall not contain any lower case characters.,,"(forall ((c String)) (=> (str.contains s c) (not (str.in.re c (re.+ (str.to.re ""[a-z]""))))))","(forall ((c String)) (=> (str.contains s c) (not (str.in.re c (re.+ (str.to.re ""[a-z]""))))))","(forall ((c String)) (=> (str.contains s c) (not (str.in.re c (re.+ (str.to.re ""[a-z]""))))))","(forall ((c String)) (=> (str.contains s c) (not (str.in.re c (re.+ (str.to.re ""[a-z]""))))))"
Date,True,The date shall contain two hyphens.,"(= (str.count s ""-"") 2)","(= (str.len s) (+ (str.len (str.replace s ""-"" """")) 2))","(= (str.len (str.replace s ""-"" """")) (+ (str.len s) -2))","(= (- (str.len s) (str.len (str.replace s ""-"" """"))) 2)","(= (str.count s ""-"") 2)"
Date,True,The date shall have a number between 0 and 2025 before the first hyphen.,"(and (<= 0 (str.to.int (str.substr s 0 (str.indexof s ""-"")))) (<= (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025))","(and (<= 0 (str.to.int (str.substr s 0 (str.indexof s ""-"")))) (<= (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025))","(and (<= 0 (str.to.int (str.substr s 0 (str.indexof s ""-"")))) (<= (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025))","(and (<= 0 (str.to.int (str.substr s 0 (str.indexof s ""-"")))) (<= (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025))","(and (<= 0 (str.to.int (str.substr s 0 (str.indexof s ""-"")))) (<= (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025))"
Date,True,The date shall have a number between 1 and 12 after the first hyphen but before the second hyphen.,"(let ((month (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"") + 1)))) (and (>= (str.to.int month) 1) (<= (str.to.int month) 12)))","(and (>= (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"") + 1)) 1) 1) (<= (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"") + 1)) 1) 12))","(let ((start (str.indexof s ""-"")) (end (str.indexof s ""-"" (str.indexof s ""-"" + 1)))) (let ((month (str.substr s (+ start 1) (- end (+ start 1))))) (and (>= (int month) 1) (<= (int month) 12))))","(let ((s (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"") + 1))))) (and (>= s 1) (<= s 12)))","(and (>= (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"") + 1)) 1) 1) (<= (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"") + 1)) 1) 12))"
Date,True,The date shall have a number between 1 and 31 after the second hyphen.,(and (>= s 1) (<= s 31)),(and (>= s 1) (<= s 31)),(and (>= s 1) (<= s 31)),(and (>= s 1) (<= s 31)),(and (>= s 1) (<= s 31))
Date,False,"The date shall contain either no hyphens, one hyphen or more than two hyphens.",,"(or (= (str.count s ""-"") 0) (= (str.count s ""-"") 1) (> (str.count s ""-"") 2))","(or (= (str.count s ""-"") 0) (= (str.count s ""-"") 1) (> (str.count s ""-"") 2))",,"(or (not (str.contains s ""-"")) (= (str.count s ""-"") 1) (> (str.count s ""-"") 2))"
Date,False,"If the date has at least one hyphen, the part before the first hyphen shall be either a number smaller than 0 or a number larger than 2025.","(=> (str.contains s ""-"") (or (< (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (> (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025)))","(=> (str.contains s ""-"") (or (< (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (> (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025)))","(=> (str.contains s ""-"") (or (< (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (> (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025)))","(=> (str.contains s ""-"") (or (< (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (> (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025)))","(=> (str.contains s ""-"") (or (< (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (> (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025)))"
Date,False,"If the date has at least two hyphens, the part after the first hyphen but before the second hyphen shall be a number smaller than 1 or a number larger than 12.","(let ((hyphen-count (str.count s ""-""))) (and (>= hyphen-count 2) (or (< (str.to.int (str.substr s (str.indexof s ""-"" 0) (str.indexof s ""-"" 1))) 1) (> (str.to.int (str.substr s (str.indexof s ""-"" 0) (str.indexof s ""-"" 1))) 12))))","(let ((h1 (str.indexof s ""-"")) (h2 (str.indexof s ""-"" (str.indexof s ""-"" (+ h1 1))))) (part (str.substr s (+ h1 1) (- h2 (+ h1 1))))) (=> (and (>= (str.count s ""-"") 2) (or (< (str.to.int part) 1) (> (str.to.int part) 12)))) )","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (str.indexof s ""-"") (+ (str.indexof s ""-"") 1))) 1) (> (str.to.int (str.substr s (str.indexof s ""-"") (+ (str.indexof s ""-"") 1))) 12)))","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"" (str.indexof s ""-"" 1) 1))) 1) 1) (> (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"" (str.indexof s ""-"" 1) 1))) 12)))","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"") + 1))) 1) (> (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"") + 1))) 12)))"
Date,False,"If the date has at least two hyphens, the part after the second hyphen shall be a number smaller than 1 or larger than 31.","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (+ (str.indexof s ""-"" 2) 1) (str.len s))) 1) (> (str.to.int (str.substr s (+ (str.indexof s ""-"" 2) 1) (str.len s))) 31)))","(let ((hyphen-count (str.count s ""-""))) (and (>= hyphen-count 2) (or (< (str.to.int (str.substr s (+ (str.indexof s ""-"" 1) 1) (str.indexof s ""-"" 2))) 1) (> (str.to.int (str.substr s (+ (str.indexof s ""-"" 1) 1) (str.indexof s ""-"" 2))) 31))))","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int s) 1) (> (str.to.int s) 31)))","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (+ (str.indexof s ""-"" 1) 1) (str.indexof s ""-"" 2))) 1) (> (str.to.int (str.substr s (+ (str.indexof s ""-"" 1) 1) (str.indexof s ""-"" 2))) 31)))",
