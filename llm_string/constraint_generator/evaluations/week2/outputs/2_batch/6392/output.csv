name,mask,nl_constraint,step_0,step_1,step_2,step_3,step_4,step_5,step_6,step_7,step_8,step_9
Name,True,"The name shall only contain letters a-z, letters A-Z and space characters.","(str.in.re s (re.* (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(str.in.re s (re.* (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(str.in.re s (re.* (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(str.in.re s (re.* (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(str.in.re s (re.* (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(str.in.re s (re.* (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(str.in.re s (re.* (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(str.in.re s (re.* (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(str.in.re s (re.* (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(str.in.re s (re.* (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))"
Name,True,The name shall contain at least one space character.,"(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")"
Name,True,The name shall not end with a space character.,"(not (= (str.at s (- (str.len s) 1)) "" ""))","(not (= (str.at s (- (str.len s) 1)) "" ""))","(not (= (str.at s (- (str.len s) 1)) "" ""))","(not (= (str.at s (- (str.len s) 1)) "" ""))","(not (= (str.at s (- (str.len s) 1)) "" ""))","(not (= (str.at s (- (str.len s) 1)) "" ""))","(not (= (str.at s (- (str.len s) 1)) "" ""))","(not (= (str.at s (- (str.len s) 1)) "" ""))","(not (= (str.at s (- (str.len s) 1)) "" ""))","(not (= (str.at s (- (str.len s) 1)) "" ""))"
Name,True,The name shall not start with a space character.,"(not (= (str.at s 0) "" ""))","(not (= (str.at s 0) "" ""))","(not (= (str.at s 0) "" ""))","(not (= (str.at s 0) "" ""))","(not (= (str.at s 0) "" ""))","(not (= (str.at s 0) "" ""))","(not (= (str.at s 0) "" ""))","(not (= (str.at s 0) "" ""))","(not (= (str.at s 0) "" ""))","(not (= (str.at s 0) "" ""))"
Name,False,"The name shall not contain letters a-z, letters A-Z and spaces.","(not (str.in.re s (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(not (str.in.re s (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(not (str.in.re s (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(not (str.in.re s (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(not (str.in.re s (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(not (str.in.re s (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(not (str.in.re s (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(not (str.in.re s (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(not (str.in.re s (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(not (str.in.re s (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))"
Name,False,The name shall contain no space character.,"(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))"
Name,False,The name shall end with a space character.,"(= (str.at s (- (str.len s) 1)) "" "")","(= (str.at s (- (str.len s) 1)) "" "")","(= (str.at s (- (str.len s) 1)) "" "")","(= (str.at s (- (str.len s) 1)) "" "")","(= (str.at s (- (str.len s) 1)) "" "")","(= (str.at s (- (str.len s) 1)) "" "")","(= (str.at s (- (str.len s) 1)) "" "")","(= (str.at s (- (str.len s) 1)) "" "")","(= (str.at s (- (str.len s) 1)) "" "")","(= (str.at s (- (str.len s) 1)) "" "")"
Name,False,The name shall start  with a space character.,"(= (str.at s 0) "" "")","(= (str.at s 0) "" "")","(= (str.at s 0) "" "")","(= (str.at s 0) "" "")","(= (str.at s 0) "" "")","(= (str.at s 0) "" "")","(= (str.at s 0) "" "")","(= (str.at s 0) "" "")","(= (str.at s 0) "" "")","(= (str.at s 0) "" "")"
Email,True,The email shall not contain a space character.,"(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))","(not (str.contains s "" ""))"
Email,True,The email shall not start with a @ character.,"(not (= (str.at s 0) ""@""))","(not (= (str.at s 0) ""@""))","(not (= (str.at s 0) ""@""))","(not (= (str.at s 0) ""@""))","(not (= (str.at s 0) ""@""))","(not (= (str.at s 0) ""@""))","(not (= (str.at s 0) ""@""))","(not (= (str.at s 0) ""@""))","(not (= (str.at s 0) ""@""))","(not (= (str.at s 0) ""@""))"
Email,True,The email shall have exactly one @ character.,"(= (str.count s ""@"")(1))","(= (str.count s ""@"")(1))","(and (str.contains s ""@"")(not (str.contains (str.substr s (str.indexof s ""@"")(str.length s)) ""@"")))","(and (str.contains s ""@"")(not (str.contains (str.substr s 0 (str.indexof s ""@"")) ""@"")) (not (str.contains (str.substr s (+ (str.indexof s ""@"") 1)) ""@"")))",,,,,,
Email,True,"If the email contains a @ character, then the email shall include a dot character (.) after the @ character but before the end.","(=> (str.contains s ""@"")(exists ((i Int)) (and (>= i (+ (str.indexof s ""@"") 1)) (< i (str.len s)) (str.contains (str.substr s i (str.len s)) "".""))))))","(=> (str.contains s ""@"") (str.contains (str.substr s (+ (str.indexof s ""@"")(1)) (str.length s)) "".""))","(=> (str.contains s ""@"")(str.contains (str.substr s (str.indexof s ""@"")(str.length s)) "".""))","(=> (str.contains s ""@"")(str.contains (str.substr s (+ (str.indexof s ""@"") 1)) "".""))",,,,,,
Email,False,The email shall contain a space character.,"(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")","(str.contains s "" "")"
Email,False,The email shall start with a @ character.,"(= (str.at s 0) ""@"")","(= (str.at s 0) ""@"")","(= (str.at s 0) ""@"")","(= (str.at s 0) ""@"")","(= (str.at s 0) ""@"")","(= (str.at s 0) ""@"")","(= (str.at s 0) ""@"")","(= (str.at s 0) ""@"")","(= (str.at s 0) ""@"")","(= (str.at s 0) ""@"")"
Email,False,The email shall have either no @ characters or more than one @ character.,"(or (not (str.contains s ""@"")) (> (str.count s ""@"") 1))","(or (not (str.contains s ""@"")) (> (str.count s ""@"")(1)))","(or (not (str.contains s ""@"")) (> (str.count s ""@"") 1))","(or (not (str.contains s ""@"")) (> (str.count s ""@"") 1))","(or (not (str.contains s ""@"")) (> (str.count s ""@"")(1)))","(or (not (str.contains s ""@"")) (> (str.count s ""@"")(1)))","(or (not (str.contains s ""@"")) (> (str.count s ""@"") 1))","(or (not (str.contains s ""@"")) (> (str.count s ""@"") 1))","(or (not (str.contains s ""@"")) (> (str.count s ""@"")(1)))","(or (not (str.contains s ""@"")) (> (str.count s ""@"") 1))"
Email,False,"If the email contains a @ character, then the email shall not include any dot characters (.) after the @ character and before the end.","(=> (str.contains s ""@"")(not (str.contains (str.substr s (+ (str.indexof s ""@"") 1) (str.length s)) ""."")))","(=> (str.contains s ""@"")(not (str.contains (str.substr s (str.indexof s ""@"" 0) (str.len s)) ""."")))","(=> (str.contains s ""@"")(not (str.contains (str.substr s (+ (str.indexof s ""@"") 1) (str.length s)) ""."")))","(=> (str.contains s ""@"")(not (str.contains (str.substr s (str.indexof s ""@"")(str.indexof s ""."")) ""."")))","(=> (str.contains s ""@"")(not (str.contains (str.substr s (+ (str.indexof s ""@"")(1)) (str.length s)) ""."")))","(=> (str.contains s ""@"")(not (str.contains (str.substr s (str.indexof s ""@"" 0) (str.len s)) ""."")))","(=> (str.contains s ""@"")(not (str.contains (str.substr s (str.indexof s ""@"")+1 (str.length s)) ""."")))","(=> (str.contains s ""@"")(not (str.contains (str.substr s (str.indexof s ""@"")) ""."")))","(=> (str.contains s ""@"")(not (str.contains (str.substr s (+ (str.indexof s ""@"") 1) (str.length s)) ""."")))","(=> (str.contains s ""@"")(not (str.contains (str.substr s (str.indexof s ""@"" 0) (str.length s)) ""."")))"
Password,True,The password shall be at least 4 characters long.,(>= (str.len s) 4),(>= (str.len s) 4),(>= (str.len s) 4),(>= (str.len s) 4),(>= (str.len s) 4),(>= (str.len s) 4),(>= (str.len s) 4),(>= (str.len s) 4),(>= (str.len s) 4),(>= (str.len s) 4)
Password,True,"The password shall contain one of the following characters: !, #, $.","(or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$""))","(or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$""))","(or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$""))","(or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$""))","(or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$""))","(or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$""))","(or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$""))","(or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$""))","(or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$""))","(or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$""))"
Password,True,The password shall contain at least one upper case characters.,"(exists ((c String)) (and (str.contains s (str.to.re (str.concat (str.from.char c) """"))) (isUpper c)))","(str.contains s (str.to.re ""[A-Z]+""))",(exists ((i Int)) (and (>= i 0) (< i (str.len s)) (isUpper (str.at s i)))),"(exists ((c String)) (and (str.contains s c) (isUpper c) (not (= c """"))))","(exists ((c String)) (and (str.contains s c) (str.in.re c (re.+ (re.range ""A"" ""Z"")))))","(exists ((c String)) (and (str.contains s c) (str.in.re c (re.+ (re.range ""A"" ""Z"")))))","(exists ((c String)) (and (str.contains s c) (str.in.re c (re.+ (re.range ""A"" ""Z"")))))","(exists ((c String)) (and (str.contains s c) (str.in.re c (re.+ (re.range ""A"" ""Z"")))))","(exists ((c String)) (and (str.contains s c) (str.in.re c (re.+ (re.range ""A"" ""Z"")))))","(exists ((c String)) (and (str.contains s c) (str.in.re c (re.+ (re.range ""A"" ""Z"")))))"
Password,True,The password shall contain at least one lower case characters.,"(exists ((c String)) (and (str.contains s (str.to.re (str.concat (str.from.char c) """"))) (isLower c)))","(str.contains s (str.to.re ""[a-z]+""))",(exists ((j Int)) (and (>= j 0) (< j (str.len s)) (isLower (str.at s j)))),"(exists ((c String)) (and (str.contains s c) (isLower c) (not (= c """"))))","(exists ((c String)) (and (str.contains s c) (str.in.re c (re.+ (re.range ""a"" ""z"")))))","(exists ((c String)) (and (str.contains s c) (str.in.re c (re.+ (re.range ""a"" ""z"")))))","(exists ((c String)) (and (str.contains s c) (str.in.re c (re.+ (re.range ""a"" ""z"")))))","(exists ((c String)) (and (str.contains s c) (str.in.re c (re.+ (re.range ""a"" ""z"")))))","(exists ((c String)) (and (str.contains s c) (str.in.re c (re.+ (re.range ""a"" ""z"")))))","(exists ((c String)) (and (str.contains s c) (str.in.re c (re.+ (re.range ""a"" ""z"")))))"
Password,False,The password shall contain less than 4 characters.,(< (str.len s) 4),(< (str.len s) 4),(< (str.len s) 4),(< (str.len s) 4),(< (str.len s) 4),(< (str.len s) 4),(< (str.len s) 4),(< (str.len s) 4),(< (str.len s) 4),(< (str.len s) 4)
Password,False,"The password shall not contain any of the following characters: !, #, $.","(not (or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$"")))","(not (or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$"")))","(not (or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$"")))","(not (or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$"")))","(not (or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$"")))","(not (or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$"")))","(not (or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$"")))","(not (or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$"")))","(not (or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$"")))","(not (or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$"")))"
Password,False,The password shall not contain any upper case characters.,"(forall ((c String)) (=> (str.contains s c) (or (not (str.contains c ""ABCDEFGHIJKLMNOPQRSTUVWXYZ"")))))","(not (str.contains s (str.to.re ""[A-Z]"")))","(not (exists ((c String)) (and (str.contains s c) (or (and (>= c ""A"") (<= c ""Z"")) (and (>= c ""a"") (<= c ""z""))))))","(not (str.contains s (str.to.re ""[A-Z]"")))","(not (exists ((c String)) (and (str.contains s c) (or (and (>= (str.to.utf8 c) (str.to.utf8 ""A"")) (<= (str.to.utf8 c) (str.to.utf8 ""Z""))) (and (>= (str.to.utf8 c) (str.to.utf8 ""a"")) (<= (str.to.utf8 c) (str.to.utf8 ""z"")))))))","(not (str.contains s (str.to.re ""[A-Z]"")))","(not (str.contains s (str.to.re ""[A-Z]"")))","(not (str.contains s (str.to.re ""[A-Z]"")))","(not (str.contains s (str.to.re ""[A-Z]"")))","(not (str.contains s (str.to.re ""[A-Z]"")))"
Password,False,The password shall not contain any lower case characters.,"(forall ((c String)) (=> (str.contains s c) (or (not (str.contains c ""abcdefghijklmnopqrstuvwxyz""))))","(not (str.contains s (str.to.re ""[a-z]"")))","(not (exists ((c String)) (and (str.contains s c) (and (>= c ""a"") (<= c ""z"")))))","(not (str.contains s (str.to.re ""[a-z]"")))","(not (exists ((c String)) (and (str.contains s c) (and (>= (str.to.utf8 c) (str.to.utf8 ""a"")) (<= (str.to.utf8 c) (str.to.utf8 ""z"")))))","(not (str.contains s (str.to.re ""[a-z]"")))","(not (str.contains s (str.to.re ""[a-z]"")))","(not (str.contains s (str.to.re ""[a-z]"")))","(not (str.contains s (str.to.re ""[a-z]"")))","(not (str.contains s (str.to.re ""[a-z]"")))"
Date,True,The date shall contain two hyphens.,"(= (- (str.len s) (str.len (str.replace s ""-"" """"))) 2)","(and (str.contains s ""-"") (str.indexof s ""-"" 0) (str.indexof s ""-"" (str.indexof s ""-"" 0 + 1)))","(= (str.count s ""-"") 2)","(= (str.count s ""-"") 2)","(= (str.count s ""-"") 2)","(= (str.count s ""-"") 2)","(= (str.count s ""-"") 2)","(= (str.count s ""-"") 2)","(= 2 (str.count s ""-""))","(= (str.count s ""-"") 2)"
Date,True,The date shall have a number between 0 and 2025 before the first hyphen.,"(let ((before-first-hyphen (str.substr s 0 (str.indexof s ""-"")))) (and (>= (int.of_string before-first-hyphen) 0) (<= (int.of_string before-first-hyphen) 2025)))","(let ((prefix (str.substr s 0 (str.indexof s ""-"" 0)))) (and (str.to.int prefix >= 0) (str.to.int prefix <= 2025)))","(let ((pos (str.indexof s ""-""))) (and (>= (str.to.int (str.substr s 0 pos)) 0) (<= (str.to.int (str.substr s 0 pos)) 2025)))","(let ((before-hyphen (str.substr s 0 (str.indexof s ""-"")))) (and (str.to.int before-hyphen >= 0) (str.to.int before-hyphen <= 2025)))","(let ((num_part (str.substr s 0 (str.indexof s ""-"")))) (and (>= (str.to.int num_part) 0) (<= (str.to.int num_part) 2025)))","(let ((first_part (str.substr s 0 (str.indexof s ""-"")))) (and (str.to.int first_part >= 0) (str.to.int first_part <= 2025)))","(let ((num (int (str.substr s 0 (str.indexof s ""-""))))) (and (>= num 0) (<= num 2025)))","(let ((before_hyphen (str.substr s 0 (str.indexof s ""-"")))) (and (>= (str.to.int before_hyphen) 0) (<= (str.to.int before_hyphen) 2025)))","(let ((prefix (str.substr s 0 (str.indexof s ""-"")))) (and (str.to.int prefix >= 0) (str.to.int prefix <= 2025)))","(let ((num (str.to.int (str.substr s 0 (str.indexof s ""-""))))) (and (>= num 0) (<= num 2025)))"
Date,True,The date shall have a number between 1 and 12 after the first hyphen but before the second hyphen.,"(and (>= (str.to.int (str.substr s (str.indexof s ""-"" 0) (str.indexof s ""-"" 1))) 1) (<= (str.to.int (str.substr s (str.indexof s ""-"" 0) (str.indexof s ""-"" 1))) 12))",,"(and (<= 1 (str.to.int (str.substr s (str.indexof s ""-"" 0) (str.indexof s ""-"" (str.indexof s ""-"" 0) + 1))) 12) (str.contains s ""-""))","(let ((month (str.substr s (str.indexof s ""-"" 0) (str.indexof s ""-"" 1)))) (and (>= (str.to.int month) 1) (<= (str.to.int month) 12)))",,,,,,
Date,True,The date shall have a number between 1 and 31 after the second hyphen.,"(and (>= (str.to.int (str.substr s (str.indexof s ""-"" 1) (str.indexof s ""-"" 2))) 1) (<= (str.to.int (str.substr s (str.indexof s ""-"" 1) (str.indexof s ""-"" 2))) 31))",,"(and (<= 1 (str.to.int (str.substr s (str.indexof s ""-"" (str.indexof s ""-"" 0) + 1) (str.length s))) 31) (str.contains s ""-""))","(let ((day (str.substr s (str.indexof s ""-"" 1) (str.length s)))) (and (>= (str.to.int day) 1) (<= (str.to.int day) 31)))",,,,,,
Date,False,"The date shall contain either no hyphens, one hyphen or more than two hyphens.","(or (= (str.count s ""-"") 0) (= (str.count s ""-"") 1) (> (str.count s ""-"") 2))","(or (= (str.count s ""-"") 0) (= (str.count s ""-"") 1) (> (str.count s ""-"") 2))","(or (not (str.contains s ""-"")) (and (= (str.count s ""-"") 1) (not (str.contains s ""-"" (str.indexof s ""-"" 1)))) (>= (str.count s ""-"") 2))","(or (not (str.contains s ""-"")) (= (str.count (str.to.re s) ""-"") 1) (> (str.count (str.to.re s) ""-"") 2))","(or (= (str.count s ""-"") 0) (= (str.count s ""-"") 1) (> (str.count s ""-"") 2))","(or (not (str.contains s ""-"")) (= (str.count s ""-"") 1) (> (str.count s ""-"") 2))","(or (not (str.contains s ""-"")) (and (str.contains s ""-"") (not (str.contains s ""--""))))","(or (not (str.contains s ""-"")) (and (str.contains s ""-"") (not (str.contains s ""--""))))","(or (not (str.contains s ""-"")) (and (str.contains s ""-"") (not (str.contains s ""--""))))","(or (not (str.contains s ""-"")) (and (str.contains s ""-"") (not (str.contains s ""--""))))"
Date,False,"If the date has at least one hyphen, the part before the first hyphen shall be either a number smaller than 0 or a number larger than 2025.","(=> (>= (str.count s ""-"") 1) (or (< (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (> (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025)))","(=> (>= (str.count s ""-"") 1) (or (< (int.parse (str.substr s 0 (str.indexof s ""-""))) 0) (> (int.parse (str.substr s 0 (str.indexof s ""-""))) 2025)))","(=> (str.contains s ""-"") (or (< (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (> (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025)))","(=> (str.contains s ""-"") (or (< (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (> (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025)))","(=> (>= (str.count s ""-"") 1) (or (< (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (> (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025)))","(=> (str.contains s ""-"") (or (< (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (> (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025)))","(=> (str.contains s ""-"") (or (< (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (> (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025)))","(=> (str.contains s ""-"") (or (< (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (> (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025)))","(=> (str.contains s ""-"") (or (< (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (> (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025)))","(=> (str.contains s ""-"") (or (< (str.to.int (str.substr s 0 (str.indexof s ""-""))) 0) (> (str.to.int (str.substr s 0 (str.indexof s ""-""))) 2025)))"
Date,False,"If the date has at least two hyphens, the part after the first hyphen but before the second hyphen shall be a number smaller than 1 or a number larger than 12.","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"" + 1) + 1))) 1) (> (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"" + 1) + 1))) 12)))","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"" 1))) 1) 1) (> (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"" 1))) 1) 12)))","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"" 0 1) 1))) 1) (> (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"" 0 1) 1))) 12)))","(=> (>= (str.count s ""-"") 2) (or (< (to_int (str.substr s (+ (str.indexof s ""-"") 1) (- (str.indexof s ""-"" (str.indexof s ""-"" 1)) (str.indexof s ""-"" 0)))) 1) (> (to_int (str.substr s (+ (str.indexof s ""-"") 1) (- (str.indexof s ""-"" (str.indexof s ""-"" 1)) (str.indexof s ""-"" 0)))) 12)))","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"" 1) 1))) 1) (> (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"" 1) 1))) 12)))","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (+ (str.indexof s ""-"") 1) (- (str.indexof s ""-"" (str.indexof s ""-"" (+ 1))) (str.indexof s ""-"" 1))) ) 1) (> (str.to.int (str.substr s (+ (str.indexof s ""-"") 1) (- (str.indexof s ""-"" (str.indexof s ""-"" (+ 1))) (str.indexof s ""-"" 1))) ) 12)))","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"" 1)))) 1) (> (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"" 1)))) 12)))","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"" + 1) + 1))) 1) (> (str.to.int (str.substr s (str.indexof s ""-"") (str.indexof s ""-"" (str.indexof s ""-"" + 1) + 1))) 12)))","(=> (>= (str.count s ""-"") 2) (or (< (int s) 1) (> (int s) 12)))","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (+ (str.indexof s ""-"") 1) (- (str.indexof s ""-"" (str.indexof s ""-"" (+ (str.indexof s ""-"") 1)) 1) (+ (str.indexof s ""-"") 1))) 1) (> (str.to.int (str.substr s (+ (str.indexof s ""-"") 1) (- (str.indexof s ""-"" (str.indexof s ""-"" (+ (str.indexof s ""-"") 1)) 1) (+ (str.indexof s ""-"") 1))) 12)))"
Date,False,"If the date has at least two hyphens, the part after the second hyphen shall be a number smaller than 1 or larger than 31.","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (str.indexof s ""-"" (str.indexof s ""-"" + 1) + 1) (str.length s))) 1) (> (str.to.int (str.substr s (str.indexof s ""-"" (str.indexof s ""-"" + 1) + 1) (str.length s))) 31)))","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (str.indexof s ""-"" (str.indexof s ""-"" 1)) (str.length s))) 1) (> (str.to.int (str.substr s (str.indexof s ""-"" (str.indexof s ""-"" 1)) (str.length s))) 31)))","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (str.indexof s ""-"" (str.indexof s ""-"" 0 1) 1) (str.length s))) 1) (> (str.to.int (str.substr s (str.indexof s ""-"" (str.indexof s ""-"" 0 1) 1) (str.length s))) 31)))","(=> (>= (str.count s ""-"") 2) (or (< (to_int (str.substr s (+ (str.indexof s ""-"" (str.indexof s ""-"" 1)) 1) (str.length s))) 1) (> (to_int (str.substr s (+ (str.indexof s ""-"" (str.indexof s ""-"" 1)) 1) (str.length s))) 31)))","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (str.indexof s ""-"" (str.indexof s ""-"" 1) 1) (str.length s))) 1) (> (str.to.int (str.substr s (str.indexof s ""-"" (str.indexof s ""-"" 1) 1) (str.length s))) 31)))","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (+ (str.indexof s ""-"" (str.indexof s ""-"" 1)) 1) (- (str.length s) (str.indexof s ""-"" (str.indexof s ""-"" 1)))) ) 1) (> (str.to.int (str.substr s (+ (str.indexof s ""-"" (str.indexof s ""-"" 1)) 1) (- (str.length s) (str.indexof s ""-"" (str.indexof s ""-"" 1)))) ) 31)))","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (str.indexof s ""-"" (str.indexof s ""-"" 1)) (str.length s))) 1) (> (str.to.int (str.substr s (str.indexof s ""-"" (str.indexof s ""-"" 1)) (str.length s))) 31)))","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (str.indexof s ""-"" (str.indexof s ""-"" + 1) + 1) (str.length s))) 1) (> (str.to.int (str.substr s (str.indexof s ""-"" (str.indexof s ""-"" + 1) + 1) (str.length s))) 31)))","(=> (>= (str.count s ""-"") 2) (or (< (int s) 1) (> (int s) 31)))","(=> (>= (str.count s ""-"") 2) (or (< (str.to.int (str.substr s (+ (str.indexof s ""-"" (str.indexof s ""-"" 1)) 1) (- (str.length s) (+ (str.indexof s ""-"" (str.indexof s ""-"" 1)) 1))) 1) (> (str.to.int (str.substr s (+ (str.indexof s ""-"" (str.indexof s ""-"" 1)) 1) (- (str.length s) (+ (str.indexof s ""-"" (str.indexof s ""-"" 1)) 1))) 31)))"
