constraint0,constraint1,level,step
,,0,0
"(and (str.in.re s (re.+ (str.to.re ""[a-zA-Z ]""))))","(str.contains s "" "")",1,1
"(and (str.in.re s (re.+ (str.to.re ""[a-zA-Z ]""))))","(str.contains s "" "")",0,2
"(assert (str.in.re s (re.+ (re.union (str.to.re ""[a-zA-Z]"") (str.to.re "" "")))))","(assert (str.contains s "" ""))",1,3
"(assert (str.in.re s (re.+ (re.union (str.to.re ""[a-zA-Z]"") (str.to.re "" "")))))","(assert (str.contains s "" ""))",0,4
"(str.in.re s (re.* (re.union (re.range 97 122) (re.range 65 90) (str.to.re "" ""))))","(str.contains s "" "")",0,5
"(str.forall s (or (and (>= (str.to.int (str.at s i)) 97) (<= (str.to.int (str.at s i)) 122)) (and (>= (str.to.int (str.at s i)) 65) (<= (str.to.int (str.at s i)) 90)) (= (str.at s i) "" ""))) )","(str.contains s "" "")",0,6
"(forall ((i Int)) (and (>= i 0) (< i (str.len s)) (or (and (>= (str.at s i) ""a"") (<= (str.at s i) ""z"")) (and (>= (str.at s i) ""A"") (<= (str.at s i) ""Z"")) (string.eq (str.at s i) "" "")))))","(exists ((i Int)) (and (>= i 0) (< i (str.len s)) (string.eq (str.at s i) "" ""))) ",0,7
"(str.in.re s (re.+ (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(str.contains s "" "")",1,8
"(str.in.re s (re.+ (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (str.to.re "" ""))))","(str.contains s "" "")",2,9
