constraint,result
"The arithmetic expression shall contain at least one character that is neither a number (0-9), nor an arithmetic operator (+, -, *, /).","(exists ((i Int)) (and (>= i 0) (< i (str.len s)) (not (str.in.re (str.at s i) (re.union (re.range ""0"" ""9"") (str.to.re ""+"") (str.to.re ""-"") (str.to.re ""*"") (str.to.re ""/""))))))"
"The arithmetic expression shall contain consecutive arithmetic operators (+, -, *, /).","(str.in.re s (re.++ (re.union (str.to.re ""+"") (str.to.re ""-"") (str.to.re ""*"") (str.to.re ""/"")) (re.union (str.to.re ""+"") (str.to.re ""-"") (str.to.re ""*"") (str.to.re ""/""))))"
"The arithmetic expression shall contain an operator from the set {+, *, /} that either does not have a number immediately before it or does not have a number immediately after it.","(or (str.prefixof ""+"" s) (str.prefixof ""*"" s) (str.prefixof ""/"" s) (str.suffixof ""+"" s) (str.suffixof ""*"" s) (str.suffixof ""/"" s) (str.contains s ""+"") (str.contains s ""*"") (str.contains s ""/"") (not (str.in.re s (re.++ (re.* re.allchar) (re.union (str.to.re ""+"") (str.to.re ""*"") (str.to.re ""/"")) (re.* re.allchar) (re.union (str.to.re ""+"") (str.to.re ""*"") (str.to.re ""/"")) (re.* re.allchar)))))"
"The arithmetic expression shall start with one of the operators in the set {+, *, /}.","(or (= (str.at s 0) ""+"") (= (str.at s 0) ""*"") (= (str.at s 0) ""/""))"
