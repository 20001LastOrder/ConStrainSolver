constraint,result
"The arithmetic expression shall contain at least one character that is neither a number (0-9), nor an arithmetic operator (+, -, *, /).","(str.in.re s (re.++ (re.* re.allchar) (re.union (re.diff re.allchar (re.range ""0"" ""9"")) (re.diff re.allchar (re.union (str.to.re ""+"") (str.to.re ""-"") (str.to.re ""*"") (str.to.re ""/"")))) (re.* re.allchar)))"
"The arithmetic expression shall contain consecutive arithmetic operators (+, -, *, /).","(or (str.contains s ""++"") (str.contains s ""--"") (str.contains s ""**"") (str.contains s ""//"") (str.contains s ""+-"") (str.contains s ""-+"") (str.contains s ""+*"") (str.contains s ""*+"") (str.contains s ""+/"") (str.contains s ""/+"") (str.contains s ""-*"") (str.contains s ""*-"") (str.contains s ""-/"") (str.contains s ""/-"") (str.contains s ""*/"") (str.contains s ""/*""))"
"The arithmetic expression shall contain an operator from the set {+, *, /} that either does not have a number immediately before it or does not have a number immediately after it.",(exssts ((s Int)) (and (>= s 0) (< s (seq.len s)) (or (and (ss_operator (seq.nth s s)) (or (not (ss_number (seq.nth s (- s 1)))) (not (ss_number (seq.nth s (+ s 1))))))))
"The arithmetic expression shall start with one of the operators in the set {+, *, /}.","(or (= (str.at s 0) ""+"") (= (str.at s 0) ""*"") (= (str.at s 0) ""/""))"
