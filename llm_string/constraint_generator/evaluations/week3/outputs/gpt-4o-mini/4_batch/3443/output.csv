name,mask,nl_constraint,function
Name,True,"The name shall only contain letters a-z, letters A-Z and space characters.","def this_function(s: str) -> bool: 
    ''' Check if The name shall only contain letters a-z, letters A-Z and space characters.'''
    return bool(re.match(""^[a-zA-Z ]+$"", s))"
Name,True,The name shall contain at least one space character.,"def this_function(s: str) -> bool: 
    ''' Check if The name shall contain at least one space character.'''
    return ' ' in s"
Name,True,The name shall not end with a space character.,"def this_function(s: str) -> bool: 
    ''' Check if The name shall not end with a space character.'''
    return not s.endswith(' ')"
Name,True,The name shall not start with a space character.,"def this_function(s: str) -> bool: 
    ''' Check if The name shall not start with a space character.'''
    return not s.startswith(' ')"
Name,False,"The name shall not contain letters a-z, letters A-Z and spaces.","def this_function(s: str) -> bool: 
    ''' Check if The name shall not contain letters a-z, letters A-Z and spaces.'''
    return all(not char.isalpha() and char != ' ' for char in s)"
Name,False,The name shall contain no space character.,"def this_function(s: str) -> bool: 
    ''' Check if The name shall contain no space character.'''
    return ' ' not in s"
Name,False,The name shall end with a space character.,"def this_function(s: str) -> bool: 
    ''' Check if The name shall end with a space character.'''
    return s.endswith(' ')"
Name,False,The name shall start  with a space character.,"def this_function(s: str) -> bool: 
    ''' Check if The name shall start with a space character.'''
    return s.startswith(' ')"
Email,True,The email shall not contain a space character.,"def this_function(s: str) -> bool: 
    ''' Check if the email shall not contain a space character.'''
    return ' ' not in s"
Email,True,The email shall not start with a @ character.,"def this_function(s: str) -> bool: 
    ''' Check if the email shall not start with a @ character.'''
    return not s.startswith('@')"
Email,True,The email shall have exactly one @ character.,"def this_function(s: str) -> bool: 
    ''' Check if the email shall have exactly one @ character.'''
    return s.count('@') == 1"
Email,True,"If the email contains a @ character, then the email shall include a dot character (.) after the @ character but before the end.","def this_function(s: str) -> bool: 
    ''' Check if the email contains a @ character, then the email shall include a dot character (.) after the @ character but before the end.'''
    if '@' in s:
        at_index = s.index('@')
        return '.' in s[at_index:]  # Check if there's a dot after the @ character
    return True  # If there's no @, this rule doesn't apply"
Email,False,The email shall contain a space character.,"def this_function(s: str) -> bool: 
    ''' Check if the email shall contain a space character.'''
    return ' ' in s"
Email,False,The email shall start with a @ character.,"def this_function(s: str) -> bool: 
    ''' Check if the email shall start with a @ character.'''
    return s.startswith('@')"
Email,False,The email shall have either no @ characters or more than one @ character.,"def this_function(s: str) -> bool: 
    ''' Check if the email shall have either no @ characters or more than one @ character.'''
    return s.count('@') != 1"
Email,False,"If the email contains a @ character, then the email shall not include any dot characters (.) after the @ character and before the end.","def this_function(s: str) -> bool: 
    ''' Check if If the email contains a @ character, then the email shall not include any dot characters (.) after the @ character and before the end.'''
    if '@' in s:
        # Split the email at the @ character
        local_part, domain_part = s.split('@', 1)
        
        # Check if there are any dots in the domain part
        return '.' not in domain_part
    return True  # If there's no @, this condition is trivially satisfied"
Password,True,The password shall be at least 4 characters long.,"def this_function(s: str) -> bool:
    ''' Check if the password is at least 4 characters long. '''
    return len(s) >= 4"
Password,True,"The password shall contain one of the following characters: !, #, $.","def this_function(s: str) -> bool:
    ''' Check if the password contains one of the following characters: !, #, $. '''
    return any(char in s for char in ['!', '#', '$'])"
Password,True,The password shall contain at least one upper case characters.,"def this_function(s: str) -> bool:
    ''' Check if the password contains at least one upper case character. '''
    return any(char.isupper() for char in s)"
Password,True,The password shall contain at least one lower case characters.,"def this_function(s: str) -> bool:
    ''' Check if the password contains at least one lower case character. '''
    return any(char.islower() for char in s)"
Password,False,The password shall contain less than 4 characters.,"def this_function(s: str) -> bool:
    ''' Check if the password shall contain less than 4 characters. '''
    return len(s) < 4"
Password,False,"The password shall not contain any of the following characters: !, #, $.","def this_function(s: str) -> bool:
    ''' Check if the password shall not contain any of the following characters: !, #, $. '''
    forbidden_characters = {'!', '#', '$'}
    return not any(char in forbidden_characters for char in s)"
Password,False,The password shall not contain any upper case characters.,"def this_function(s: str) -> bool:
    ''' Check if the password shall not contain any upper case characters. '''
    return not any(char.isupper() for char in s)"
Password,False,The password shall not contain any lower case characters.,"def this_function(s: str) -> bool:
    ''' Check if the password shall not contain any lower case characters. '''
    return not any(char.islower() for char in s)"
Date,True,The date shall contain two hyphens.,"def this_function(s: str) -> bool:
    ''' Check if the date contains exactly two hyphens.'''
    return s.count('-') == 2"
Date,True,"If there are at least one hyphen, the part before the first hyphen shall be a number between 0 and 2025.","def this_function(s: str) -> bool:
    ''' Check if the part before the first hyphen is a number between 0 and 2025.'''
    if '-' in s:
        first_part = s.split('-')[0]
        return first_part.isdigit() and 0 <= int(first_part) <= 2025
    return False"
Date,True,"If there are at least two hyphens, the part after the first hyphen but before the second hyphen shall be a number between 1 and 12.","def this_function(s: str) -> bool:
    ''' Check if the part after the first hyphen but before the second hyphen is a number between 1 and 12.'''
    if s.count('-') >= 2:
        second_part = s.split('-')[1]
        return second_part.isdigit() and 1 <= int(second_part) <= 12
    return False"
Date,True,"If there are at least two hyphen, The part after the second hyphen shall be a number between 1 and 31.","def this_function(s: str) -> bool:
    ''' Check if the part after the second hyphen is a number between 1 and 31.'''
    if s.count('-') == 2:
        third_part = s.split('-')[2]
        return third_part.isdigit() and 1 <= int(third_part) <= 31
    return False"
Date,False,"The date shall contain either no hyphens, one hyphen or more than two hyphens.","def this_function(s: str) -> bool: 
    ''' Check if the date contains either no hyphens, one hyphen, or more than two hyphens.'''
    hyphen_count = s.count('-')
    return hyphen_count == 0 or hyphen_count == 1 or hyphen_count > 2"
Date,False,"If the date has at least one hyphen, the part before the first hyphen shall be either a number smaller than 0 or a number larger than 2025.","def this_function(s: str) -> bool: 
    ''' Check if if the date has at least one hyphen, the part before the first hyphen shall be either a number smaller than 0 or a number larger than 2025.'''
    if '-' in s:
        first_part = s.split('-')[0]
        try:
            first_number = int(first_part)
            return first_number < 0 or first_number > 2025
        except ValueError:
            return False
    return True  # If there are no hyphens, this function's condition is not applicable."
Date,False,"If the date has at least two hyphens, the part after the first hyphen but before the second hyphen shall be a number smaller than 1 or a number larger than 12.","def this_function(s: str) -> bool: 
    ''' Check if if the date has at least two hyphens, the part after the first hyphen but before the second hyphen shall be a number smaller than 1 or a number larger than 12.'''
    if s.count('-') >= 2:
        parts = s.split('-')
        if len(parts) > 2:
            second_part = parts[1]
            try:
                second_number = int(second_part)
                return second_number < 1 or second_number > 12
            except ValueError:
                return False
    return True  # If there are less than two hyphens, this function's condition is not applicable."
Date,False,"If the date has at least two hyphens, the part after the second hyphen shall be a number smaller than 1 or larger than 31.","def this_function(s: str) -> bool: 
    ''' Check if if the date has at least two hyphens, the part after the second hyphen shall be a number smaller than 1 or larger than 31.'''
    if s.count('-') >= 2:
        parts = s.split('-')
        if len(parts) > 2:
            third_part = parts[2]
            try:
                third_number = int(third_part)
                return third_number < 1 or third_number > 31
            except ValueError:
                return False
    return True  # If there are less than two hyphens, this function's condition is not applicable."
