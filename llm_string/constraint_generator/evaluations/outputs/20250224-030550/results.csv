0,1,2,3
Name,True,"1. The name shall only contain letters a-z, letters A-Z and space characters.","(str.in.re s (re.+ (re.union (re.range ""a"" ""z"") (re.range ""A"" ""Z"") (re.all "" ""))))"
Name,True,2. The name shall contain at least one space character.,"(str.contains s "" "")"
Name,True,3. The name shall not end with a space character.,"(not (str.suffixof "" "" s))"
Name,True,4. The name shall not  start with a space character.,"(not (= (str.at s 0) "" ""))"
Name,True,5. The first character in the name shall be capitalized.,"(and (>= (str.to_code (str.at s 0)) (str.to_code ""A"")) (<= (str.to_code (str.at s 0)) (str.to_code ""Z"")))"
Name,True,6. Any character in the name following a space character shall be capitalized.,"(forall ((i Int)) (=> (and (>= i 0) (< i (- (str.len s) 1)) (= (str.at s i) "" "")) (let ((nextChar (str.at s (+ i 1)))) (and (>= (str.to_code nextChar) 65) (<= (str.to_code nextChar) 90)))))"
Name,False,"1. The name shall not contain letters a-z, letters A-Z and spaces.","(and (not (str.contains s ""a"")) (not (str.contains s ""b"")) (not (str.contains s ""c"")) (not (str.contains s ""d"")) (not (str.contains s ""e"")) (not (str.contains s ""f"")) (not (str.contains s ""g"")) (not (str.contains s ""h"")) (not (str.contains s ""i"")) (not (str.contains s ""j"")) (not (str.contains s ""k"")) (not (str.contains s ""l"")) (not (str.contains s ""m"")) (not (str.contains s ""n"")) (not (str.contains s ""o"")) (not (str.contains s ""p"")) (not (str.contains s ""q"")) (not (str.contains s ""r"")) (not (str.contains s ""s"")) (not (str.contains s ""t"")) (not (str.contains s ""u"")) (not (str.contains s ""v"")) (not (str.contains s ""w"")) (not (str.contains s ""x"")) (not (str.contains s ""y"")) (not (str.contains s ""z"")) (not (str.contains s ""A"")) (not (str.contains s ""B"")) (not (str.contains s ""C"")) (not (str.contains s ""D"")) (not (str.contains s ""E"")) (not (str.contains s ""F"")) (not (str.contains s ""G"")) (not (str.contains s ""H"")) (not (str.contains s ""I"")) (not (str.contains s ""J"")) (not (str.contains s ""K"")) (not (str.contains s ""L"")) (not (str.contains s ""M"")) (not (str.contains s ""N"")) (not (str.contains s ""O"")) (not (str.contains s ""P"")) (not (str.contains s ""Q"")) (not (str.contains s ""R"")) (not (str.contains s ""S"")) (not (str.contains s ""T"")) (not (str.contains s ""U"")) (not (str.contains s ""V"")) (not (str.contains s ""W"")) (not (str.contains s ""X"")) (not (str.contains s ""Y"")) (not (str.contains s ""Z"")) (not (str.contains s "" "")))"
Name,False,2. The name shall contain no space character.,"(not (str.contains s "" ""))"
Name,False,3. The name shall end with a space character.,"(str.suffixof "" "" s)"
Name,False,4. The name shall start  with a space character.,"(= (str.at s 0) "" "")"
Name,False,5. The first character in the name shall not be capitalized.,(or (< (str.to_code (str.at s 0)) 65) (> (str.to_code (str.at s 0)) 90))
Name,False,"6. In the name, there shall be some characters following a space character which are not capitalized.","(exists ((i Int)) (and (>= i 0) (< i (str.len s)) (str.contains (str.substr s i 1) "" "") (or (str.contains (str.substr s (+ i 1) 1) ""a"") (str.contains (str.substr s (+ i 1) 1) ""b"") (str.contains (str.substr s (+ i 1) 1) ""c"") (str.contains (str.substr s (+ i 1) 1) ""d"") (str.contains (str.substr s (+ i 1) 1) ""e"") (str.contains (str.substr s (+ i 1) 1) ""f"") (str.contains (str.substr s (+ i 1) 1) ""g"") (str.contains (str.substr s (+ i 1) 1) ""h"") (str.contains (str.substr s (+ i 1) 1) ""i"") (str.contains (str.substr s (+ i 1) 1) ""j"") (str.contains (str.substr s (+ i 1) 1) ""k"") (str.contains (str.substr s (+ i 1) 1) ""l"") (str.contains (str.substr s (+ i 1) 1) ""m"") (str.contains (str.substr s (+ i 1) 1) ""n"") (str.contains (str.substr s (+ i 1) 1) ""o"") (str.contains (str.substr s (+ i 1) 1) ""p"") (str.contains (str.substr s (+ i 1) 1) ""q"") (str.contains (str.substr s (+ i 1) 1) ""r"") (str.contains (str.substr s (+ i 1) 1) ""s"") (str.contains (str.substr s (+ i 1) 1) ""t"") (str.contains (str.substr s (+ i 1) 1) ""u"") (str.contains (str.substr s (+ i 1) 1) ""v"") (str.contains (str.substr s (+ i 1) 1) ""w"") (str.contains (str.substr s (+ i 1) 1) ""x"") (str.contains (str.substr s (+ i 1) 1) ""y"") (str.contains (str.substr s (+ i 1) 1) ""z""))))"
Email,True,1. The email shall not contain a space character.,"(not (str.contains s "" ""))"
Email,True,2. The email shall not start with a @ character.,"(not (= (str.at s 0) ""@""))"
Email,True,3. The email shall have exactly one @ character.,"(and (not (= (str.indexof s ""@"" 0) -1)) (= (str.indexof s ""@"" (+ 1 (str.indexof s ""@"" 0))) -1))"
Email,True,"4. If the email contains a @ character, then the email shall include a dot character (.) after the @ character but before the end.","(=> (str.contains s ""@"") (and (not (= (str.indexof s ""."" (str.indexof s ""@"")) -1)) (> (str.indexof s ""."" (str.indexof s ""@"")) (str.indexof s ""@""))))"
Email,True,5. The final character of the email shall not be a dot character (.).,"(not (= (str.at s (- (str.len s) 1)) "".""))"
Email,True,6. The email shall not contain the word “manager”.,"(not (str.contains s ""manager""))"
Email,False,1. The email shall contain a space character.,"(str.contains s "" "")"
Email,False,2. The email shall start with a @ character.,"(= (str.at s 0) ""@"")"
Email,False,3. The email shall have either no @ characters or more than one @ character.,"(or (= (str.indexof s ""@"" 0) -1) (> (- (str.len s) (str.len (str.replace s ""@"" """"))) 1))"
Email,False,"4. If the email contains a @ character, then the email shall not include any dot characters (.) after the @ character and before the end.","(=> (str.contains s ""@"") (= (str.indexof s ""."" (+ (str.indexof s ""@"") 1)) -1))"
Email,False,5. The final character of the email shall be a dot character (.).,"(= (str.at s (- (str.len s) 1)) ""."")"
Email,False,6. The email shall contain the word “manager”.,"(str.contains s ""manager"")"
Password,True,1. The password shall be at least 4 characters long.,(>= (str.len s) 4)
Password,True,"2. The password shall contain one of the following characters: !, #, $.","(or (str.contains s ""!"") (str.contains s ""#"") (str.contains s ""$""))"
Password,True,3. The password shall contain at least one upper case characters.,(exists ((i Int)) (and (>= i 0) (< i (str.len s)) (let ((c (str.at s i))) (and (>= (str.to_code c) 65) (<= (str.to_code c) 90)))))
Password,True,4. The password shall contain at least one lower case characters.,(exists ((i Int)) (and (>= i 0) (< i (str.len s)) (str.contains s (str.from_int i))))
Password,True,5. The password shall contain at least one number.,"(or (str.contains s ""0"") (str.contains s ""1"") (str.contains s ""2"") (str.contains s ""3"") (str.contains s ""4"") (str.contains s ""5"") (str.contains s ""6"") (str.contains s ""7"") (str.contains s ""8"") (str.contains s ""9""))"
Password,False,1. The password shall contain less than 4 characters.,(< (str.len s) 4)
Password,False,"2. The password shall not contain any of the following characters: !, #, $.","(and (not (str.contains s ""!"")) (not (str.contains s ""#"")) (not (str.contains s ""$"")))"
Password,False,3. The password shall not contain any upper case characters.,"(and (not (str.contains s ""A"")) (not (str.contains s ""B"")) (not (str.contains s ""C"")) (not (str.contains s ""D"")) (not (str.contains s ""E"")) (not (str.contains s ""F"")) (not (str.contains s ""G"")) (not (str.contains s ""H"")) (not (str.contains s ""I"")) (not (str.contains s ""J"")) (not (str.contains s ""K"")) (not (str.contains s ""L"")) (not (str.contains s ""M"")) (not (str.contains s ""N"")) (not (str.contains s ""O"")) (not (str.contains s ""P"")) (not (str.contains s ""Q"")) (not (str.contains s ""R"")) (not (str.contains s ""S"")) (not (str.contains s ""T"")) (not (str.contains s ""U"")) (not (str.contains s ""V"")) (not (str.contains s ""W"")) (not (str.contains s ""X"")) (not (str.contains s ""Y"")) (not (str.contains s ""Z"")))"
Password,False,4. The password shall not contain any lower case characters.,(forall ((i Int)) (=> (and (>= i 0) (< i (str.len s))) (or (< (str.to_code (str.at s i)) 97) (> (str.to_code (str.at s i)) 122))))
Password,False,5. The password shall not contain any numbers.,"(and (not (str.contains s ""0"")) (not (str.contains s ""1"")) (not (str.contains s ""2"")) (not (str.contains s ""3"")) (not (str.contains s ""4"")) (not (str.contains s ""5"")) (not (str.contains s ""6"")) (not (str.contains s ""7"")) (not (str.contains s ""8"")) (not (str.contains s ""9"")))"
Url,True,1. The url shall start with either http:// or https://.,"(or (str.prefixof ""http://"" s) (str.prefixof ""https://"" s))"
Url,True,2. The url shall not contain any spaces.,"(not (str.contains s "" ""))"
Url,True,3. The url shall contain at least one dot character (.).,"(str.contains s ""."")"
Url,False,"1. The url shall not start with http://, nor with https://.","(and (not (str.prefixof ""http://"" s)) (not (str.prefixof ""https://"" s)))"
Url,False,2. The url shall contain at least one space.,"(str.contains s "" "")"
Url,False,3. The url shall not contain any dot character (.).,"(not (str.contains s "".""))"
Date,True,1. The date shall contain two hyphens.,"(= (- (str.len s) (str.len (str.replace s ""-"" """"))) 2)"
Date,True,2. The date shall have a number between 0 and 2025 before the first hyphen.,"(let ((hyphen-pos (str.indexof s ""-"" 0))) (and (>= hyphen-pos 0) (let ((prefix (str.substr s 0 hyphen-pos))) (and (>= (str.to.int prefix) 0) (<= (str.to.int prefix) 2025)))))"
Date,True,3. The data shall have a number between 1 and 12 after the first hyphen but before the second hyphen.,"(and (>= (str.indexof s ""-"" 0) 0) (>= (str.indexof s ""-"" (+ 1 (str.indexof s ""-"" 0))) 0) (let ((start (+ 1 (str.indexof s ""-"" 0))) (end (str.indexof s ""-"" (+ 1 (str.indexof s ""-"" 0))))) (and (<= 1 (str.to.int (str.substr s start (- end start)))) (<= (str.to.int (str.substr s start (- end start))) 12))))"
Date,True,4. The date shall have a number between 1 and 31 after the second hyphen.,"(let ((second-hyphen-pos (+ 1 (str.indexof s ""-"" (+ 1 (str.indexof s ""-"" 0)))))) (and (>= (str.to_int (str.substr s second-hyphen-pos (- (str.len s) second-hyphen-pos))) 1) (<= (str.to_int (str.substr s second-hyphen-pos (- (str.len s) second-hyphen-pos))) 31)))"
Date,False,"1. The date shall contain either no hyphens, one hyphen or more than two hyphens.","(or (= (str.indexof s ""-"" 0) -1) (= (str.indexof s ""-"" (+ (str.indexof s ""-"" 0) 1)) -1) (not (= (str.indexof s ""-"" (+ (str.indexof s ""-"" (+ (str.indexof s ""-"" 0) 1)) 1)) -1)))"
Date,False,"2. If the date has at least one hyphen, the part before the first hyphen shall be either a number smaller than 0 or a number larger than 2025.","(let ((hyphen-pos (str.indexof s ""-"" 0))) (and (not (= hyphen-pos -1)) (let ((prefix (str.substr s 0 hyphen-pos))) (or (< (str.to.int prefix) 0) (> (str.to.int prefix) 2025)))))"
Date,False,"3. If the date has at least two hyphens, the part after the first hyphen but before the second hyphen shall be a number smaller than 1 or a number larger than 12.",
Date,False,"4. If the date has at least two hyphens, the part after the second hyphen shall be a number smaller than 1 or larger than 31.",
IBAN,True,1. The length of the bank number shall be 22.,(= (str.len s) 22)
IBAN,True,2. The first 4 numbers of the bank number shall be: 1210 (CA).,"(str.prefixof ""1210"" s)"
IBAN,True,3. The next 2 numbers of the bank number after the first 4 numbers shall be 00.,"(= (str.substr s 4 2) ""00"")"
IBAN,False,1. The length of the bank number shall not be 22.,(not (= (str.len s) 22))
IBAN,False,2. The first 4 numbers of the bank number shall not be: 1210 (CA).,
IBAN,False,3. The next 2 numbers of the bank number after the first 4 numbers shall not be 00.,"(not (= (str.substr s 4 2) ""00""))"
