name,mask,constraint,result
Absolute_Path,True,"The absolute path shall start with the root directory ""/"".",
Absolute_Path,True,The absolute path shall not contain any spaces.,
Absolute_Path,True,"The absolute path shall not end with ""/"".",
Absolute_Path,True,"The absolute path shall not contain consecutive ""/"" characters.",
Absolute_Path,False,"The absolute path shall not start with the root directory ""/"".",
Absolute_Path,False,The absolute path shall contain at least one space.,"(str.contains s "" "")"
Absolute_Path,False,"The absolute path shall end with ""/"".","(str.suffix s ""/"")"
Absolute_Path,False,"The absolute path shall contain consecutive ""/"" characters.","(str.contains s ""+"")"
Date,True,The date shall contain two hyphens.,"(str.contains s ""--"")"
Date,True,"If there is at least one hyphen, the part before the hyphen shall be a number between 0 and 2025.",
Date,True,"If there are at least two hyphens, the part after the first hyphen but before the second hyphen shall be a number between 1 and 12.",
Date,True,"If there are at least two hyphen, The part after the second hyphen shall be a number between 1 and 31.",
Date,False,"The date shall contain either no hyphens, one hyphen or more than two hyphens.","(or (not (str.contains s ""-"")) (= (str.count s ""-"") 1) ((str.count s ""-"") > 2))"
Date,False,There must be at least one hyphen and the part before the hyphen shall not be a number between 0 and 2025.,
Date,False,There must be at least two hyphens and the part after the first hyphen but before the second hyphen shall not be a number between 1 and 12.,
Date,False,There must be at least two hyphens an d the part after the second hyphen shall not be a number between 1 and 31.,
DNA,True,"The DNA sequence shall only contain letters A, T, C and G.","(forall (B) (= (or (= B 65) (= B 68) (= B 67) (= B 70) (= B 71)) (= B 84) (= B 87) (= B 86) (= B 89)) (in B s)))]
}"
DNA,True,The length of The DNA sequence shall be at least 10.,(>= (str.len s) 10)
DNA,True,The length of The DNA sequence shall be a multiple of three.,( Ãºltima ( Str.iden Len s 3))
DNA,True,The DNA sequence shall start with ATG.,
DNA,True,"The DNA sequence shall end with either TAA, or TAG, or TGA.","(or (= suffix s ""TAA"") (= suffix s ""TAG"") (= suffix s ""TGA""))"
DNA,False,"The DNA sequence shall contain at least one letter that is neither A, nor T, nor C, nor G.",
DNA,False,The length of the DNA sequence shall be at most 9.,(<= (length s) 9)
DNA,False,The length of the DNA sequence shall not a multiple of three.,
DNA,False,The DNA sequence shall not start with ATG.,
DNA,False,"The DNA sequence shall not end with TAA, nor with TAG, nor with TGA.",
Email,True,The email shall not contain a space character.,"(not (str.contains s "" ""))"
Email,True,The email shall not start with a @ character.,"(and (> (str.len s) 0) (not (= (str.at s 0) ""@"")))"
Email,True,The email shall have exactly one @ character.,
Email,True,The email shall include a dot character (.) after the @ character but before the end.,
Email,True,The final character of the email shall not be a dot character (.).,
Email,True,"The email shall not contain the word ""manager"".",
Email,False,The email shall contain a space character.,"(str.contains s "" "")"
Email,False,The email shall start with a @ character.,
Email,False,The email shall have either no @ characters or more than one @ character.,
Email,False,If the email contains a @ character and there shall not include any dot characters (.) after the @ character and before the end.,
Email,False,The final character of the email shall be a dot character (.).,
Email,False,"The email shall contain the word ""manager"".",
Expression,True,"The arithmetic expression shall only contain numbers (0-9) and arithmetic operators (+, -, *, /).",
Expression,True,"The arithmetic operators (+, -, *, /) in the arithmetic expression shall not appear consecutively.",
Expression,True,"Except for the minus sign (-), every operator (+, *, /) in the arithmetic expression shall have a number before and after it.",
Expression,True,"The arithmetic expression shall not start with operators from the set {+, *, /}.",
Expression,False,"The arithmetic expression shall contain at least one character that is neither a number (0-9), nor an arithmetic operator (+, -, *, /).","(or (not (str.in.re s (re.++ (re.* re.allchar) (re.union (str.to.re ""0"") (str.to.re ""1"") (str.to.re ""2"") (str.to.re ""3"") (str.to.re ""4"") (str.to.re ""5"") (str.to.re ""6"") (str.to.re ""7"") (str.to.re ""8"") (str.to.re ""9"") (str.to.re ""+"") (str.to.re ""-""))) (str.to.re ""*"")) (not (str.in.re s (re.++ (re.* re.allchar) (str.to.re ""/"") (re.* re.allchar)))))"
Expression,False,"The arithmetic expression shall contain consecutive arithmetic operators (+, -, *, /).",
Expression,False,"The arithmetic expression shall contain an operator from the set {+, *, /} that either does not have a number immediately before it or does not have a number immediately after it.",
Expression,False,"The arithmetic expression shall start with one of the operators in the set {+, *, /}.",
IBAN,True,The length of the bank number shall be 22.,(< (= (strlen s) 22))
IBAN,True,The bank number shall start with 1210.,
IBAN,True,"The bank number shall have at least 6 characters, and the fifth and sixth characters shall both be 0.",
IBAN,False,The length of the bank account shall not be 22.,
IBAN,False,The bank number shall not start with 1210.,"(not (and (str.starts-with s ""1210"") (not (= s 1210))))"
IBAN,False,"The bank number shall either have less than 6 characters, or either the fifth or sixth character shall not be 0.
",
ISBN,True,"The ISBN shall only contain numbers (0-9), the letter X, or hyphens.",
ISBN,True,The last character of the ISBN shall either be a number (0-9) or the letter X.,
ISBN,True,"The ISBN shall contain exactly 10 characters, excluding hyphens.",
ISBN,True,The ISBN shall not start with a hyphen.,"(not (= (str.at s 0) ""-""))"
ISBN,True,Hyphens shall not occur consecutively in the ISBN.,"(not (str.contains s ""--""))"
ISBN,True,The ISBN shall contain at most 3 hyphens.,
ISBN,False,"The ISBN shall contain at least one character that is neither a number (0-9), nor the letter X, nor a hyphen.","(not (forall ((i Int)) (and (<= 0 i (str.len s)) (not (or (str.in.re s (str.to.re ""0-9"")) (= (str.at s i) ""X"") (= (str.at s i) ""-"")))))))"
ISBN,False,"The last character of the ISBN shall be neither a number (0-9), nor the letter X.",
ISBN,False,"Without counting hyphens, the ISBN shall contain less than or more than 10 characters.",(not (= (str.len s) 10))
ISBN,False,The ISBN shall start with a hyphen.,"(str.prefix s ""-"")"
ISBN,False,The ISBN shall contain two consecutive hyphens.,"(str.in.re s (re.++ (re.* re.allchar) (str.to.re ""-"" (str.to.re ""-"")) (re.* re.allchar)))"
ISBN,False,The ISBN shall contain more than 3 hyphens.,
Name,True,"The name shall only contain letters a-z, letters A-Z and space characters.",
Name,True,The name shall contain at least one space character.,"(not (str.contains s "" ""))"
Name,True,The name shall not end with a space character.,"(not (str.ends-with s "" ""))"
Name,True,The name shall not start with a space character.,"(not (= (str.at s 0) "" ""))"
Name,True,The first character in the name shall be capitalized.,(not (= (str.toLOWER (str.at s 0)) (str.toLOWER ?)))
Name,True,Any character in the name following a space character shall be capitalized.,
Name,False,"The name shall contain at least one character that is neither a letter a-z, nor a letter A-Z, nor a space.","(forall ((s String)) (forall ((c Char)) (or (not (str.in-re s (str.to.re c))) (= c "" ""))"
Name,False,The name shall contain no space character.,"(not (str.contains s "" ""))"
Name,False,The name shall end with a space character.,"(and (str.suffix? s "" "") (not (str.prefix? s (str.strip suffix """")))"
Name,False,The name shall start with a space character.,
Name,False,The first character in the name shall not be capitalized.,(not (or (= (str.code (str.at s 0)) 65) (>= (str.code (str.at s 0)) 66) (<= (str.code (str.at s 0)) 91))`
Name,False,"In the name, there shall be some characters following a space character which are not capitalized.",
Palindrome,True,The palindrome shall be at least 3 characters long.,
Palindrome,True,The palindrome shall be identical to its reverse.,
Palindrome,False,The palindrome shall be at most 2 characters long.,
Palindrome,False,The palindrome shall not be identical to its reverse.,
Parentheses,True,The parentheses string shall be at least 10 characters long.,
Parentheses,True,The parentheses string shall only contains ( and ) characters.,"(= (str.in.re s (re.++ (str.to.re ""("" ) (re.* re.allchar) (str.to.re "")"") (re.* re.allchar)))"
Parentheses,True,The parenthesis string shall contain an equal number of ( characters and ) characters.,
Parentheses,True,"When scanning from left to right on the parentheses string, at no point shall the count of ) characters exceed the count of ( characters.",
Parentheses,False,The parentheses string shall be at most 9 characters long.,(<= (str.len s) 9)
Parentheses,False,The parentheses string shall contain at least one character that is neither ( nor ).,
Parentheses,False,The parenthesis string shall not contain an equal number of ( characters and ) characters.,(not (=(str indexing s 0 (str.len s)) (str indexing s (-1) 0)))
Parentheses,False,"There shall exist at least one position in a parentheses string such that, when scanning from left to right up to that position, the count of ) characters exceeds the count of ( characters.",
Password,True,The password shall be at least 4 characters long.,
Password,True,"The password shall contain one of the following characters: !, #, $.",
Password,True,The password shall contain at least one upper case characters.,
Password,True,The password shall contain at least one lower case characters.,"(>= (str.count s (regpat ""[a-z]"")) 1)"
Password,True,The password shall contain at least one number.,(not (= 0 (count (filter (lambda ((k Int)) (and (>= 48 k) (<= k 57))) s))))
Password,False,The password shall contain less than 4 characters.,(< (str.len s) 4)
Password,False,"The password shall not contain any of the following characters: !, #, $.","(or (not (str.contains s ""$\\!"")) (not (str.contains s ""$\\#"")) (not (str.contains s ""$\\$"")) )"
Password,False,The password shall not contain any upper case characters.,
Password,False,The password shall not contain any lower case characters.,
Password,False,The password shall not contain any numbers.,(not (str.in.re s (re.++ (re.* re.allchar) (re.n NatDigit)))
Url,True,The url shall start with either http:// or https://.,"(or (str.prefix s ""http://"") (str.prefix s ""https://""))"
Url,True,The url shall not contain any spaces.,
Url,True,The url shall contain at least one dot character (.).,"(str.contains s ""."")"
Url,False,"The url shall not start with http://, nor with https://.",
Url,False,The url shall contain at least one space.,"(str.contains s "" "")"
Url,False,The url shall not contain any dot character (.).,
