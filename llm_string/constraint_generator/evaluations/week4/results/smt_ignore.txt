(forall ((i Int)) (=> (and (>= i 0) (< i (str.len s))) (or (= (str.at s i) "A") (= (str.at s i) "T") (= (str.at s i) "C") (= (str.at s i) "G"))))
(exists ((i Int)) (and (>= i 0) (< i (str.len s)) (not (or (= (str.at s i) "A") (= (str.at s i) "T") (= (str.at s i) "C") (= (str.at s i) "G")))))
(or (str.contains s "++") (str.contains s "--") (str.contains s "**") (str.contains s "//"))
(exists ((c String)) (and (str.contains s c) (str.in_re c (re.+ (re.range "A" "Z")))))
(or (str.contains s "0") (str.contains s "1") (str.contains s "2") (str.contains s "3") (str.contains s "4") (str.contains s "5") (str.contains s "6") (str.contains s "7") (str.contains s "8") (str.contains s "9"))
(and (str.contains s "@") (let ((at_pos (str.indexof s "@" 0))) (and (not (= at_pos -1)) (str.contains (str.substr s (+ at_pos 1) (- (str.len s) (+ at_pos 1))) "."))))
(and (str.contains s "@") (let ((at_pos (str.indexof s "@" 0))) (not (str.contains (str.substr s (+ at_pos 1) (- (str.len s) (+ at_pos 1))) "."))))
(exists ((i Int)) (and (>= i 0) (< i (str.len s)) (not (str.in_re (str.at s i) (re.union (re.range "0" "9") (str.to_re "+") (str.to_re "-") (str.to_re "*") (str.to_re "/"))))))
(str.in_re s (re.++ (re.* re.allchar) (re.diff re.allchar (re.union (str.to_re "0") (str.to_re "1") (str.to_re "2") (str.to_re "3") (str.to_re "4") (str.to_re "5") (str.to_re "6") (str.to_re "7") (str.to_re "8") (str.to_re "9") (str.to_re "X") (str.to_re "-"))) (re.* re.allchar)))
(str.in_re s (re.++ (re.* re.allchar) (str.to_re " ") (re.range "a" "z") (re.* re.allchar)))
(forall ((i Int)) (=> (and (>= i 0) (< i (str.len s))) (or (= (str.at s i) "(") (= (str.at s i) ")"))))
(exists ((i Int)) (and (>= i 0) (< i (str.len s)) (not (or (= (str.at s i) "(") (= (str.at s i) ")")))))
(and (forall ((i Int)) (=> (and (>= i 0) (< i (str.len s))) (or (= (str.at s i) "(") (= (str.at s i) ")")))))
(str.in_re s (re.++ (re.* re.allchar) (str.to_re "@") (re.* (re.diff re.allchar (str.to_re "."))) (str.to_re ".") (re.+ re.allchar)))
(forall ((i Int)) (=> (and (>= i 0) (< i (str.len s))) (or (and (>= (str.to_int (str.at s i)) 0) (<= (str.to_int (str.at s i)) 9)) (str.contains "+-*/" (str.at s i)))))
(forall ((i Int)) (=> (and (>= i 0) (< i (- (str.len s) 1))) (not (and (str.contains "+-*/" (str.at s i)) (str.contains "+-*/" (str.at s (+ i 1)))))))
(exists ((i Int)) (and (>= i 0) (< i (str.len s)) (not (or (and (>= (str.to_int (str.at s i)) 0) (<= (str.to_int (str.at s i)) 9)) (str.contains "+-*/" (str.at s i))))))
(exists ((i Int)) (and (>= i 0) (< i (- (str.len s) 1)) (str.contains "+-*/" (str.at s i)) (str.contains "+-*/" (str.at s (+ i 1)))))
(exists ((i Int)) (and (>= i 0) (< i (str.len s)) (or (and (str.contains "+*/" (str.at s i)) (or (not (and (>= i 1) (>= (str.to_int (str.at s (- i 1))) 0) (<= (str.to_int (str.at s (- i 1))) 9))) (not (and (< i (- (str.len s) 1)) (>= (str.to_int (str.at s (+ i 1))) 0) (<= (str.to_int (str.at s (+ i 1))) 9))))) (and (= i 0) (str.contains "+*/" (str.at s i))) (and (= i (- (str.len s) 1)) (str.contains "+*/" (str.at s i))))))
(exists ((i Int)) (and (>= i 0) (< i (str.len s)) (not (or (and (>= (str.to_int (str.at s i)) 0) (<= (str.to_int (str.at s i)) 9)) (= (str.at s i) "X") (= (str.at s i) "-")))))
(str.in_re s (re.++ (re.* re.allchar) (re.diff re.allchar (re.union (re.range "a" "z") (re.range "A" "Z") (str.to_re " ")))))
(exists ((i Int)) (and (<= 0 i) (< i (str.len s)) (not (or (= (str.at s i) "(") (= (str.at s i) ")")))))
(exists ((i Int)) (and (<= 0 i) (< i (str.len s)) (> (str.to_int (str.replace (str.substr s 0 i) "(" "")) (str.to_int (str.replace (str.substr s 0 i) ")" "")))))
(not (str.in_re s (re.++ (re.* re.allchar) (str.to_re "//") (re.* re.allchar))))
(str.in_re s (re.++ (re.* re.allchar) (str.to_re "//") (re.* re.allchar)))
(or (= (str.indexof s "-" 0) (- 1)) (= (str.indexof s "-" (+ (str.indexof s "-" 0) 1)) (- 1)) (> (str.indexof s "-" (+ (str.indexof s "-" (+ (str.indexof s "-" 0) 1)) 1)) (- 1)))
(let ((at_pos (str.indexof s "@" 0))) (and (>= at_pos 0) (str.contains (str.substr s (+ at_pos 1) (- (str.len s) (+ at_pos 1))) ".")))
(=> (str.contains s "@") (not (str.contains (str.substr s (+ (str.indexof s "@") 1) (- (str.len s) (+ (str.indexof s "@") 1))) ".")))
(str.in_re s (re.+ (re.union (re.range "0" "9") (str.to_re "+") (str.to_re "-") (str.to_re "*") (str.to_re "/"))))
(or (str.contains s "++") (str.contains s "--") (str.contains s "**") (str.contains s "//") (str.contains s "+-") (str.contains s "-+") (str.contains s "+*") (str.contains s "*+") (str.contains s "+/") (str.contains s "/+") (str.contains s "-*") (str.contains s "*-") (str.contains s "-/") (str.contains s "/-") (str.contains s "*/") (str.contains s "/*"))
(forall ((i Int)) (=> (and (>= i 0) (< i (- (str.len s) 1))) (not (and (= (str.at s i) "-") (= (str.at s (+ i 1)) "-")))))
(exists ((i Int)) (and (>= i 0) (< i (str.len s)) (not (or (and (>= (str.to_code (str.at s i)) 48) (<= (str.to_code (str.at s i)) 57)) (= (str.at s i) "X") (= (str.at s i) "-")))))
(str.in_re s (re.++ (re.* (re.union (re.range "a" "z") (re.range "A" "Z"))) (re.* (re.++ (str.to_re " ") (re.range "A" "Z")))))
(str.in_re s (re.++ (re.* re.allchar) (str.to_re " ") (re.+ (re.range "a" "z")) (re.* re.allchar)))
(=> (str.contains s "@") (not (str.in_re s (re.++ (re.* re.allchar) (str.to_re "@") (re.* (re.diff re.allchar (str.to_re "."))) (str.to_re ".") (re.* re.allchar)))))
(exists ((i Int)) (and (>= i 0) (< i (str.len s)) (not (or (str.is_digit (str.at s i)) (str.contains "+-*/" (str.at s i))))))
(exists ((i Int)) (and (>= i 0) (< i (str.len s)) (str.contains "+*/" (str.at s i)) (or (or (= i 0) (not (str.is_digit (str.at s (- i 1))))) (or (= i (- (str.len s) 1)) (not (str.is_digit (str.at s (+ i 1))))))))
