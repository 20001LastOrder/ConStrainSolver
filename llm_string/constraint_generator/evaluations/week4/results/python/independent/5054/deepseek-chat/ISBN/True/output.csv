constraint,result
"The ISBN shall only contain numbers (0-9), the letter X, or hyphens.","def this_function(s: str) -> bool:
    ''' Check if the ISBN shall only contain numbers (0-9), the letter X, or hyphens.'''
    allowed_chars = set(""0123456789X-"")
    return all(char in allowed_chars for char in s)"
The last character of the ISBN shall either be a number (0-9) or the letter X.,"def this_function(s: str) -> bool:
    ''' 
    Check if the last character of the ISBN is either a number (0-9) or the letter X.
    
    Args:
    s (str): The ISBN string to check.
    
    Returns:
    bool: True if the last character is valid, False otherwise.
    '''
    if not s:  # Check if the string is empty
        return False
    
    last_char = s[-1]  # Get the last character of the string
    
    # Check if the last character is a digit or 'X'
    return last_char.isdigit() or last_char.upper() == 'X'"
"The ISBN shall contain exactly 10 characters, excluding hyphens.","def this_function(s: str) -> bool:
    # Remove hyphens from the string
    s_cleaned = s.replace('-', '')
    
    # Check if the cleaned string has exactly 10 characters
    return len(s_cleaned) == 10"
The ISBN shall not start with a hyphen.,"def this_function(s: str) -> bool:
    '''Check if the ISBN shall not start with a hyphen.'''
    return not s.startswith('-')"
Hyphens shall not occur consecutively in the ISBN.,"def this_function(s: str) -> bool:
    ''' Check if hyphens shall not occur consecutively in the ISBN.'''
    for i in range(len(s) - 1):
        if s[i] == '-' and s[i + 1] == '-':
            return False
    return True"
The ISBN shall contain at most 3 hyphens.,"def this_function(s: str) -> bool:
    ''' Check if The ISBN shall contain at most 3 hyphens.'''
    return s.count('-') <= 3"
